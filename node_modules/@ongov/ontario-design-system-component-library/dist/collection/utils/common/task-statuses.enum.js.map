{"version":3,"file":"task-statuses.enum.js","sourceRoot":"","sources":["../../../src/utils/common/task-statuses.enum.ts"],"names":[],"mappings":"AAAA,mCAAmC;AACnC,MAAM,CAAN,IAAY,YAOX;AAPD,WAAY,YAAY;IACvB,yCAAyB,CAAA;IACzB,yCAAyB,CAAA;IACzB,uCAAuB,CAAA;IACvB,iDAAiC,CAAA;IACjC,+BAAe,CAAA;IACf,qCAAqB,CAAA;AACtB,CAAC,EAPW,YAAY,KAAZ,YAAY,QAOvB;AAED,qCAAqC;AACrC,MAAM,CAAC,MAAM,iBAAiB,GAAG;IAChC,CAAC,YAAY,CAAC,UAAU,CAAC,EAAE,WAAW;IACtC,CAAC,YAAY,CAAC,UAAU,CAAC,EAAE,MAAM;IACjC,CAAC,YAAY,CAAC,SAAS,CAAC,EAAE,OAAO;IACjC,CAAC,YAAY,CAAC,cAAc,CAAC,EAAE,UAAU;IACzC,CAAC,YAAY,CAAC,KAAK,CAAC,EAAE,KAAK;IAC3B,CAAC,YAAY,CAAC,QAAQ,CAAC,EAAE,MAAM;CACtB,CAAC","sourcesContent":["// Define an enum for task statuses\nexport enum TaskStatuses {\n\tNotStarted = 'notStarted',\n\tInProgress = 'inProgress',\n\tCompleted = 'completed',\n\tCannotStartYet = 'cannotStartYet',\n\tError = 'error',\n\tOptional = 'optional',\n}\n\n// Map task statuses to badge colours\nexport const TaskToBadgeColour = {\n\t[TaskStatuses.NotStarted]: 'lightTeal',\n\t[TaskStatuses.InProgress]: 'teal',\n\t[TaskStatuses.Completed]: 'white',\n\t[TaskStatuses.CannotStartYet]: 'darkGrey',\n\t[TaskStatuses.Error]: 'red',\n\t[TaskStatuses.Optional]: 'grey',\n} as const;\n\n// Define the type for task statuses\nexport type TaskStatus = keyof typeof TaskStatuses;\n\n// Define the type for badge colours\nexport type TaskBadgeColour = (typeof TaskToBadgeColour)[TaskStatuses];\n"]}