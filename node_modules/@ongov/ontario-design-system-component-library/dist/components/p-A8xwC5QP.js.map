{"file":"p-A8xwC5QP.js","mappings":"AAAA;IACY;AAAZ,CAAA,UAAY,YAAY,EAAA;AACvB,IAAA,YAAA,CAAA,YAAA,CAAA,GAAA,YAAyB;AACzB,IAAA,YAAA,CAAA,YAAA,CAAA,GAAA,YAAyB;AACzB,IAAA,YAAA,CAAA,WAAA,CAAA,GAAA,WAAuB;AACvB,IAAA,YAAA,CAAA,gBAAA,CAAA,GAAA,gBAAiC;AACjC,IAAA,YAAA,CAAA,OAAA,CAAA,GAAA,OAAe;AACf,IAAA,YAAA,CAAA,UAAA,CAAA,GAAA,UAAqB;AACtB,CAAC,EAPW,YAAY,KAAZ,YAAY,GAOvB,EAAA,CAAA,CAAA;AAED;AACa,MAAA,iBAAiB,GAAG;AAChC,IAAA,CAAC,YAAY,CAAC,UAAU,GAAG,WAAW;AACtC,IAAA,CAAC,YAAY,CAAC,UAAU,GAAG,MAAM;AACjC,IAAA,CAAC,YAAY,CAAC,SAAS,GAAG,OAAO;AACjC,IAAA,CAAC,YAAY,CAAC,cAAc,GAAG,UAAU;AACzC,IAAA,CAAC,YAAY,CAAC,KAAK,GAAG,KAAK;AAC3B,IAAA,CAAC,YAAY,CAAC,QAAQ,GAAG,MAAM;;;;;","names":[],"sources":["src/utils/common/task-statuses.enum.ts"],"sourcesContent":["// Define an enum for task statuses\nexport enum TaskStatuses {\n\tNotStarted = 'notStarted',\n\tInProgress = 'inProgress',\n\tCompleted = 'completed',\n\tCannotStartYet = 'cannotStartYet',\n\tError = 'error',\n\tOptional = 'optional',\n}\n\n// Map task statuses to badge colours\nexport const TaskToBadgeColour = {\n\t[TaskStatuses.NotStarted]: 'lightTeal',\n\t[TaskStatuses.InProgress]: 'teal',\n\t[TaskStatuses.Completed]: 'white',\n\t[TaskStatuses.CannotStartYet]: 'darkGrey',\n\t[TaskStatuses.Error]: 'red',\n\t[TaskStatuses.Optional]: 'grey',\n} as const;\n\n// Define the type for task statuses\nexport type TaskStatus = keyof typeof TaskStatuses;\n\n// Define the type for badge colours\nexport type TaskBadgeColour = (typeof TaskToBadgeColour)[TaskStatuses];\n"],"version":3}