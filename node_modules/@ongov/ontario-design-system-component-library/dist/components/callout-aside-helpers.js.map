{"file":"callout-aside-helpers.js","mappings":"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","names":[],"sources":["src/utils/components/callout-aside/callout-aside.interface.ts","src/utils/components/callout-aside/callout-aside-helpers.tsx"],"sourcesContent":["import { Base } from '../../common/common.interface';\n\nexport const HeadingLevel = ['h2', 'h3', 'h4', 'h5', 'h6'] as const;\n\nexport type HeadingLevelOptions = (typeof HeadingLevel)[number];\n\nexport const HighlightColours = ['teal', 'gold', 'yellow', 'taupe', 'green', 'lime', 'sky', 'blue', 'purple'] as const;\n\nexport type HighlightColourOptions = (typeof HighlightColours)[number];\n\nexport type CalloutAsideType = 'callout' | 'aside';\n\nexport type HeadingContentType = 'string' | 'html';\n\nexport const HeadingContentTypes = ['string', 'html'] as const;\n\nexport interface CalloutAside extends Base {\n\t/**\n\t * The heading level of the callout/aside heading.\n\t */\n\theadingType?: HeadingLevelOptions;\n\n\t/**\n\t * The type of the heading content. If no prop is passed, it will default to string.\n\t */\n\theadingContentType: HeadingContentType;\n\n\t/**\n\t * Text or HTML to be displayed as the heading of the callout/aside. If the heading content should be displayed as HTML, the `headingContentType` needs to be set to `html`.\n\t */\n\theadingContent?: string;\n\n\t/**\n\t * Optional text to be displayed as the content for the callout/aside component. If a string is passed, it will automatically be nested in a paragraph tag.\n\t *\n\t * HTML content can also be passed as the child/children of the callout/aside component if additional/different elements for the content are needed.\n\t */\n\tcontent?: string | HTMLElement;\n\n\t/**\n\t * Optional prop to choose the border colour of the callout/aside. If none is passed, the default colour will be teal.\n\t */\n\thighlightColor?: HighlightColourOptions | undefined;\n}\n","import { h } from '@stencil/core';\nimport {\n\tCalloutAsideType,\n\tHeadingLevel,\n\tHeadingLevelOptions,\n\tHeadingContentType,\n\tHighlightColours,\n\tHighlightColourOptions,\n} from './callout-aside.interface';\n\nexport const isValidHighlightColour = (colour: HighlightColourOptions): colour is HighlightColourOptions =>\n\tHighlightColours.includes(colour);\n\nexport const isValidHeadingLevel = (level: HeadingLevelOptions): level is HeadingLevelOptions =>\n\tHeadingLevel.includes(level);\n\nconst generateClasses = (type: CalloutAsideType, highlightColor?: HighlightColourOptions) => {\n\tconst componentType = type === 'callout' ? `ontario-callout` : `ontario-aside`;\n\tconst borderColor = `ontario-border-highlight--${highlightColor}`;\n\n\treturn highlightColor ? `${componentType} ${borderColor}` : `${componentType}`;\n};\n\nconst generateHeading = (\n\ttype: CalloutAsideType,\n\theadingType: HeadingLevelOptions | undefined,\n\theadingContentType: HeadingContentType,\n\theadingContent: string,\n) => {\n\tconst headingContentIsHTML = headingContentType === 'html';\n\n\tswitch (headingType) {\n\t\tcase 'h2':\n\t\t\treturn headingContentIsHTML ? (\n\t\t\t\t<h2 class={`ontario-${type}__title ontario-h5`} innerHTML={headingContent}></h2>\n\t\t\t) : (\n\t\t\t\t<h2 class={`ontario-${type}__title ontario-h5`}>{headingContent}</h2>\n\t\t\t);\n\t\tcase 'h3':\n\t\t\treturn headingContentIsHTML ? (\n\t\t\t\t<h3 class={`ontario-${type}__title ontario-h5`} innerHTML={headingContent}></h3>\n\t\t\t) : (\n\t\t\t\t<h3 class={`ontario-${type}__title ontario-h5`}>{headingContent}</h3>\n\t\t\t);\n\t\tcase 'h4':\n\t\t\treturn headingContentIsHTML ? (\n\t\t\t\t<h4 class={`ontario-${type}__title ontario-h5`} innerHTML={headingContent}></h4>\n\t\t\t) : (\n\t\t\t\t<h4 class={`ontario-${type}__title ontario-h5`}>{headingContent}</h4>\n\t\t\t);\n\t\tcase 'h5':\n\t\t\treturn headingContentIsHTML ? (\n\t\t\t\t<h5 class={`ontario-${type}__title ontario-h5`} innerHTML={headingContent}></h5>\n\t\t\t) : (\n\t\t\t\t<h5 class={`ontario-${type}__title ontario-h5`}>{headingContent}</h5>\n\t\t\t);\n\t\tcase 'h6':\n\t\t\treturn headingContentIsHTML ? (\n\t\t\t\t<h6 class={`ontario-${type}__title ontario-h5`} innerHTML={headingContent}></h6>\n\t\t\t) : (\n\t\t\t\t<h6 class={`ontario-${type}__title ontario-h5`}>{headingContent}</h6>\n\t\t\t);\n\t\tdefault:\n\t\t\treturn headingContentIsHTML ? (\n\t\t\t\t<h2 class={`ontario-${type}__title ontario-h5`} innerHTML={headingContent}></h2>\n\t\t\t) : (\n\t\t\t\t<h2 class={`ontario-${type}__title ontario-h5`}>{headingContent}</h2>\n\t\t\t);\n\t}\n};\n\nexport const generateCalloutAside = (\n\ttype: CalloutAsideType,\n\theadingContentType: HeadingContentType,\n\theadingType?: HeadingLevelOptions,\n\theadingContent?: string,\n\tcontent?: string | HTMLElement,\n\thighlightColour?: HighlightColourOptions,\n) => {\n\tconst contentIsString = typeof content === 'string';\n\n\treturn type === 'callout' ? (\n\t\t<div class={generateClasses(type, highlightColour)}>\n\t\t\t{headingContent ? generateHeading(type, headingType, headingContentType, headingContent) : ''}\n\t\t\t{contentIsString ? <p>{content}</p> : <slot />}\n\t\t</div>\n\t) : (\n\t\t<aside class={generateClasses(type, highlightColour)}>\n\t\t\t{headingContent ? generateHeading(type, headingType, headingContentType, headingContent) : ''}\n\t\t\t{contentIsString ? content ? <p>{content}</p> : '' : <slot />}\n\t\t</aside>\n\t);\n};\n"],"version":3}