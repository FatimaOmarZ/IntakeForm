import { BadgeColour } from './ontario-badge.types';
export declare class OntarioBadge {
	host: HTMLElement;
	internals: ElementInternals;
	/**
	 * The colour of the badge.
	 */
	colour: BadgeColour;
	/**
	 * The label for the badge.
	 *
	 * Offical guidance is to keep the label length within 15 characters.
	 */
	label: string;
	/**
	 * An aria label for screen readers.
	 *
	 * Used to provide more context to screen readers if necessary.
	 *
	 * This property is optional.
	 *
	 * @example
	 * <ontario-badge aria-label-text="This training is currently in progress.">In progress</ontario-badge>
	 */
	ariaLabelText?: string;
	/**
	 * Watch for changes in the `label` prop for validation purposes.
	 *
	 * If no `label` value or host.textContent is provided, a warning message will be printed.
	 */
	validateLabel(): void;
	/**
	 * Watch for changes to the `colour` prop.
	 *
	 * If no `colour` is passed, or if the `colour` does not match the `colour` options, a default value of 'teal' will be applied.
	 *
	 * @returns {BadgeColour}
	 */
	validateColour(): BadgeColour;
	/**
	 * Programatically set and return the colour prop.
	 *
	 * @prop {BadgeColour} colour
	 *
	 * @returns {BadgeColour}
	 */
	setBadgeColour(colour: BadgeColour): BadgeColour;
	/**
	 * Returns badge label depending on if the label prop was set or
	 * if the host.textContent (text in-between the opening and closing tag) was set.
	 *
	 * The label prop takes priority.
	 *
	 * @returns {string | null}
	 */
	getBadgeLabel(): string | null;
	componentWillLoad(): void;
	render(): any;
}
