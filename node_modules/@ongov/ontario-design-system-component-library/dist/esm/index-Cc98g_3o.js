const NAMESPACE = 'ontario-design-system-components';
const BUILD = /* ontario-design-system-components */ {
	hydratedSelectorName: 'hydrated',
	lazyLoad: true,
	updatable: true,
};

const globalFn = () => {};

const globalScripts = globalFn;
const globalStyles =
	'@charset "UTF-8";h6,.ontario-h6,h5,.ontario-h5,h4,.ontario-h4,h3,.ontario-h3,h2,.ontario-h2,h1>.ontario-label--heading,.ontario-fieldset__legend--large h1,.ontario-fieldset__legend--heading h1,h1,.ontario-h1{font-style:normal;font-weight:700;text-rendering:optimizeLegibility;margin-bottom:1rem;font-feature-settings:normal;font-family:"Raleway", "Open Sans", "Helvetica Neue", Helvetica, Arial, sans-serif}h1>.ontario-label--heading,.ontario-fieldset__legend--large h1,.ontario-fieldset__legend--heading h1,h1,.ontario-h1{font-size:2rem;letter-spacing:0.04rem;line-height:1.29;margin:2.5rem 0 1.5rem 0;max-width:70rem}@media screen and (min-width: 40em){h1>.ontario-label--heading,.ontario-fieldset__legend--large h1,.ontario-fieldset__legend--heading h1,h1,.ontario-h1{font-size:2.5rem;letter-spacing:0.04rem;line-height:1.2}}h2,.ontario-h2{font-size:1.6875rem;letter-spacing:0.03rem;line-height:1.37;margin:0 0 0.75rem 0;max-width:48rem}@media screen and (min-width: 40em){h2,.ontario-h2{font-size:2.0625rem;letter-spacing:0.02rem;line-height:1.33}}h3,.ontario-h3{font-size:1.4375rem;letter-spacing:0.02rem;line-height:1.39;margin:0 0 0.75rem 0;max-width:48rem}@media screen and (min-width: 40em){h3,.ontario-h3{font-size:1.75rem;letter-spacing:0.02rem;line-height:1.43}}h4,.ontario-h4{font-size:1.25rem;letter-spacing:0.03rem;line-height:1.5;margin:0 0 0.75rem 0;max-width:48rem}@media screen and (min-width: 40em){h4,.ontario-h4{font-size:1.5rem;letter-spacing:0.0313rem;line-height:1.5}}h5,.ontario-h5{font-size:1.125rem;letter-spacing:0.03rem;line-height:1.56;margin:0 0 0.75rem 0;max-width:48rem}@media screen and (min-width: 40em){h5,.ontario-h5{font-size:1.1875rem;letter-spacing:0.025rem;line-height:1.5}}h6,.ontario-h6{font-size:1rem;line-height:1.56;letter-spacing:0.03rem;max-width:48rem;margin:0 0 0.75rem 0}@media screen and (min-width: 40em){h6,.ontario-h6{font-size:1rem;letter-spacing:0.025rem;line-height:1.5}}.ontario-lead-statement{font-size:1.25rem;line-height:1.6;max-width:70rem}@media screen and (min-width: 40em){.ontario-lead-statement{font-size:1.375rem}}.ontario-margin-top-0-\\!{margin-top:0}.ontario-padding-top-0-\\!{padding-top:0}.ontario-margin-bottom-0-\\!{margin-bottom:0}.ontario-padding-bottom-0-\\!{padding-bottom:0}.ontario-margin-left-0-\\!{margin-left:0}.ontario-padding-left-0-\\!{padding-left:0}.ontario-margin-right-0-\\!{margin-right:0}.ontario-padding-right-0-\\!{padding-right:0}.ontario-margin-top-4-\\!{margin-top:0.25rem}.ontario-padding-top-4-\\!{padding-top:0.25rem}.ontario-margin-bottom-4-\\!{margin-bottom:0.25rem}.ontario-padding-bottom-4-\\!{padding-bottom:0.25rem}.ontario-margin-left-4-\\!{margin-left:0.25rem}.ontario-padding-left-4-\\!{padding-left:0.25rem}.ontario-margin-right-4-\\!{margin-right:0.25rem}.ontario-padding-right-4-\\!{padding-right:0.25rem}.ontario-margin-top-8-\\!{margin-top:0.5rem}.ontario-padding-top-8-\\!{padding-top:0.5rem}.ontario-margin-bottom-8-\\!{margin-bottom:0.5rem}.ontario-padding-bottom-8-\\!{padding-bottom:0.5rem}.ontario-margin-left-8-\\!{margin-left:0.5rem}.ontario-padding-left-8-\\!{padding-left:0.5rem}.ontario-margin-right-8-\\!{margin-right:0.5rem}.ontario-padding-right-8-\\!{padding-right:0.5rem}.ontario-margin-top-12-\\!{margin-top:0.75rem}.ontario-padding-top-12-\\!{padding-top:0.75rem}.ontario-margin-bottom-12-\\!{margin-bottom:0.75rem}.ontario-padding-bottom-12-\\!{padding-bottom:0.75rem}.ontario-margin-left-12-\\!{margin-left:0.75rem}.ontario-padding-left-12-\\!{padding-left:0.75rem}.ontario-margin-right-12-\\!{margin-right:0.75rem}.ontario-padding-right-12-\\!{padding-right:0.75rem}.ontario-margin-top-16-\\!{margin-top:1rem}.ontario-padding-top-16-\\!{padding-top:1rem}.ontario-margin-bottom-16-\\!{margin-bottom:1rem}.ontario-padding-bottom-16-\\!{padding-bottom:1rem}.ontario-margin-left-16-\\!{margin-left:1rem}.ontario-padding-left-16-\\!{padding-left:1rem}.ontario-margin-right-16-\\!{margin-right:1rem}.ontario-padding-right-16-\\!{padding-right:1rem}.ontario-margin-top-24-\\!{margin-top:1.5rem}.ontario-padding-top-24-\\!{padding-top:1.5rem}.ontario-margin-bottom-24-\\!{margin-bottom:1.5rem}.ontario-padding-bottom-24-\\!{padding-bottom:1.5rem}.ontario-margin-left-24-\\!{margin-left:1.5rem}.ontario-padding-left-24-\\!{padding-left:1.5rem}.ontario-margin-right-24-\\!{margin-right:1.5rem}.ontario-padding-right-24-\\!{padding-right:1.5rem}.ontario-margin-top-32-\\!{margin-top:2rem}.ontario-padding-top-32-\\!{padding-top:2rem}.ontario-margin-bottom-32-\\!{margin-bottom:2rem}.ontario-padding-bottom-32-\\!{padding-bottom:2rem}.ontario-margin-left-32-\\!{margin-left:2rem}.ontario-padding-left-32-\\!{padding-left:2rem}.ontario-margin-right-32-\\!{margin-right:2rem}.ontario-padding-right-32-\\!{padding-right:2rem}.ontario-margin-top-40-\\!{margin-top:2.5rem}.ontario-padding-top-40-\\!{padding-top:2.5rem}.ontario-margin-bottom-40-\\!{margin-bottom:2.5rem}.ontario-padding-bottom-40-\\!{padding-bottom:2.5rem}.ontario-margin-left-40-\\!{margin-left:2.5rem}.ontario-padding-left-40-\\!{padding-left:2.5rem}.ontario-margin-right-40-\\!{margin-right:2.5rem}.ontario-padding-right-40-\\!{padding-right:2.5rem}.ontario-margin-top-48-\\!{margin-top:3rem}.ontario-padding-top-48-\\!{padding-top:3rem}.ontario-margin-bottom-48-\\!{margin-bottom:3rem}.ontario-padding-bottom-48-\\!{padding-bottom:3rem}.ontario-margin-left-48-\\!{margin-left:3rem}.ontario-padding-left-48-\\!{padding-left:3rem}.ontario-margin-right-48-\\!{margin-right:3rem}.ontario-padding-right-48-\\!{padding-right:3rem}.ontario-margin-top-64-\\!{margin-top:4rem}.ontario-padding-top-64-\\!{padding-top:4rem}.ontario-margin-bottom-64-\\!{margin-bottom:4rem}.ontario-padding-bottom-64-\\!{padding-bottom:4rem}.ontario-margin-left-64-\\!{margin-left:4rem}.ontario-padding-left-64-\\!{padding-left:4rem}.ontario-margin-right-64-\\!{margin-right:4rem}.ontario-padding-right-64-\\!{padding-right:4rem}.ontario-padding-top-0-\\!{padding-top:0 !important}.ontario-padding-bottom-0-\\!{padding-bottom:0 !important}.ontario-padding-right-0-\\!{padding-right:0 !important}.ontario-padding-left-0-\\!{padding-left:0 !important}.ontario-padding-top-4-\\!{padding-top:0.25rem !important}.ontario-padding-bottom-4-\\!{padding-bottom:0.25rem !important}.ontario-padding-right-4-\\!{padding-right:0.25rem !important}.ontario-padding-left-4-\\!{padding-left:0.25rem !important}.ontario-padding-top-8-\\!{padding-top:0.5rem !important}.ontario-padding-bottom-8-\\!{padding-bottom:0.5rem !important}.ontario-padding-right-8-\\!{padding-right:0.5rem !important}.ontario-padding-left-8-\\!{padding-left:0.5rem !important}.ontario-padding-top-12-\\!{padding-top:0.75rem !important}.ontario-padding-bottom-12-\\!{padding-bottom:0.75rem !important}.ontario-padding-right-12-\\!{padding-right:0.75rem !important}.ontario-padding-left-12-\\!{padding-left:0.75rem !important}.ontario-padding-top-16-\\!{padding-top:1rem !important}.ontario-padding-bottom-16-\\!{padding-bottom:1rem !important}.ontario-padding-right-16-\\!{padding-right:1rem !important}.ontario-padding-left-16-\\!{padding-left:1rem !important}.ontario-padding-top-24-\\!{padding-top:1.5rem !important}.ontario-padding-bottom-24-\\!{padding-bottom:1.5rem !important}.ontario-padding-right-24-\\!{padding-right:1.5rem !important}.ontario-padding-left-24-\\!{padding-left:1.5rem !important}.ontario-padding-top-32-\\!{padding-top:2rem !important}.ontario-padding-bottom-32-\\!{padding-bottom:2rem !important}.ontario-padding-right-32-\\!{padding-right:2rem !important}.ontario-padding-left-32-\\!{padding-left:2rem !important}.ontario-padding-top-40-\\!{padding-top:2.5rem !important}.ontario-padding-bottom-40-\\!{padding-bottom:2.5rem !important}.ontario-padding-right-40-\\!{padding-right:2.5rem !important}.ontario-padding-left-40-\\!{padding-left:2.5rem !important}.ontario-padding-top-48-\\!{padding-top:3rem !important}.ontario-padding-bottom-48-\\!{padding-bottom:3rem !important}.ontario-padding-right-48-\\!{padding-right:3rem !important}.ontario-padding-left-48-\\!{padding-left:3rem !important}.ontario-padding-top-64-\\!{padding-top:4rem !important}.ontario-padding-bottom-64-\\!{padding-bottom:4rem !important}.ontario-padding-right-64-\\!{padding-right:4rem !important}.ontario-padding-left-64-\\!{padding-left:4rem !important}.ontario-padding-top-80-\\!{padding-top:5rem !important}.ontario-padding-bottom-80-\\!{padding-bottom:5rem !important}.ontario-padding-right-80-\\!{padding-right:5rem !important}.ontario-padding-left-80-\\!{padding-left:5rem !important}.ontario-margin-top-0-\\!{margin-top:0 !important}.ontario-margin-bottom-0-\\!{margin-bottom:0 !important}.ontario-margin-right-0-\\!{margin-right:0 !important}.ontario-margin-left-0-\\!{margin-left:0 !important}.ontario-margin-top-4-\\!{margin-top:0.25rem !important}.ontario-margin-bottom-4-\\!{margin-bottom:0.25rem !important}.ontario-margin-right-4-\\!{margin-right:0.25rem !important}.ontario-margin-left-4-\\!{margin-left:0.25rem !important}.ontario-margin-top-8-\\!{margin-top:0.5rem !important}.ontario-margin-bottom-8-\\!{margin-bottom:0.5rem !important}.ontario-margin-right-8-\\!{margin-right:0.5rem !important}.ontario-margin-left-8-\\!{margin-left:0.5rem !important}.ontario-margin-top-12-\\!{margin-top:0.75rem !important}.ontario-margin-bottom-12-\\!{margin-bottom:0.75rem !important}.ontario-margin-right-12-\\!{margin-right:0.75rem !important}.ontario-margin-left-12-\\!{margin-left:0.75rem !important}.ontario-margin-top-16-\\!{margin-top:1rem !important}.ontario-margin-bottom-16-\\!{margin-bottom:1rem !important}.ontario-margin-right-16-\\!{margin-right:1rem !important}.ontario-margin-left-16-\\!{margin-left:1rem !important}.ontario-margin-top-24-\\!{margin-top:1.5rem !important}.ontario-margin-bottom-24-\\!{margin-bottom:1.5rem !important}.ontario-margin-right-24-\\!{margin-right:1.5rem !important}.ontario-margin-left-24-\\!{margin-left:1.5rem !important}.ontario-margin-top-32-\\!{margin-top:2rem !important}.ontario-margin-bottom-32-\\!{margin-bottom:2rem !important}.ontario-margin-right-32-\\!{margin-right:2rem !important}.ontario-margin-left-32-\\!{margin-left:2rem !important}.ontario-margin-top-40-\\!{margin-top:2.5rem !important}.ontario-margin-bottom-40-\\!{margin-bottom:2.5rem !important}.ontario-margin-right-40-\\!{margin-right:2.5rem !important}.ontario-margin-left-40-\\!{margin-left:2.5rem !important}.ontario-margin-top-48-\\!{margin-top:3rem !important}.ontario-margin-bottom-48-\\!{margin-bottom:3rem !important}.ontario-margin-right-48-\\!{margin-right:3rem !important}.ontario-margin-left-48-\\!{margin-left:3rem !important}.ontario-margin-top-64-\\!{margin-top:4rem !important}.ontario-margin-bottom-64-\\!{margin-bottom:4rem !important}.ontario-margin-right-64-\\!{margin-right:4rem !important}.ontario-margin-left-64-\\!{margin-left:4rem !important}.ontario-margin-top-80-\\!{margin-top:5rem !important}.ontario-margin-bottom-80-\\!{margin-bottom:5rem !important}.ontario-margin-right-80-\\!{margin-right:5rem !important}.ontario-margin-left-80-\\!{margin-left:5rem !important}.ontario-input:focus,.ontario-input:active{box-shadow:0 0 0 4px #009ADB;outline:4px solid transparent;transition:box-shadow 0.1s ease-in-out}.ontario-bg-white{background-color:#FFFFFF}.ontario-bg-greyscale-5{background-color:#f2f2f2}.ontario-bg-greyscale-20{background-color:#cccccc}.ontario-bg-greyscale-40{background-color:#999999}.ontario-bg-greyscale-60{background-color:#666666}.ontario-bg-greyscale-70{background-color:#4d4d4d}.ontario-bg-black{background-color:#1a1a1a}.ontario-bg-gold{background-color:#CBA52E}.ontario-bg-yellow{background-color:#FCAF17}.ontario-bg-taupe{background-color:#C1B28F}.ontario-bg-green{background-color:#39B54A}.ontario-bg-lime{background-color:#8DC63F}.ontario-bg-teal{background-color:#49A7A2}.ontario-bg-sky{background-color:#00B2E3}.ontario-bg-blue{background-color:#3193CC}.ontario-bg-purple{background-color:#B975B7}.ontario-bg-orange{background-color:#F15A22}.ontario-bg-red{background-color:#F0454B}.ontario-bg-magenta{background-color:#F03093}.ontario-bg-light-gold{background-color:#F0E7CC}.ontario-bg-light-yellow{background-color:#F8E5C3}.ontario-bg-light-taupe{background-color:#EBE7DB}.ontario-bg-light-green{background-color:#D1EFD4}.ontario-bg-light-lime{background-color:#DDEDC7}.ontario-bg-light-teal{background-color:#CFEDED}.ontario-bg-light-sky{background-color:#C5EEFA}.ontario-bg-light-blue{background-color:#DBE9F5}.ontario-bg-light-purple{background-color:#F1E3F2}.ontario-bg-light-orange{background-color:#FEE1D9}.ontario-bg-light-red{background-color:#FFE0E2}.ontario-bg-light-magenta{background-color:#FEDFF0}.ontario-bg-dark-gold{background-color:#86743D}.ontario-bg-dark-yellow{background-color:#8A600D}.ontario-bg-dark-taupe{background-color:#7B725C}.ontario-bg-dark-green{background-color:#2B8737}.ontario-bg-dark-lime{background-color:#5F8129}.ontario-bg-dark-teal{background-color:#367A76}.ontario-bg-dark-sky{background-color:#1080A6}.ontario-bg-dark-blue{background-color:#0369ac}.ontario-bg-dark-purple{background-color:#92278F}.ontario-bg-dark-orange{background-color:#C64A1C}.ontario-bg-dark-red{background-color:#D81A21}.ontario-bg-dark-magenta{background-color:#C00264}@font-face{font-family:"Courier Prime";font-weight:400;font-style:normal;font-display:swap;src:url("../../../fonts/courier-prime-400/courier-prime-400.woff2") format("woff2"), url("../../../fonts/courier-prime-400/courier-prime-400.otf") format("opentype"), url("../../../fonts/courier-prime-400/courier-prime-400.ttf") format("truetype"), local("Courier Prime"), local("Courier-prime-regular")}@font-face{font-family:"Courier Prime";font-weight:400;font-style:italic;font-display:swap;src:url("../../../fonts/courier-prime-400--italic/courier-prime-400--italic.woff2") format("woff2"), url("../../../fonts/courier-prime-400--italic/courier-prime-400--italic.otf") format("opentype"), url("../../../fonts/courier-prime-400--italic/courier-prime-400--italic.ttf") format("truetype"), local("Courier Prime Italic"), local("Courier-prime-italic")}@font-face{font-family:"Courier Prime";font-weight:700;font-style:normal;font-display:swap;src:url("../../../fonts/courier-prime-700/courier-prime-700.woff2") format("woff2"), url("../../../fonts/courier-prime-700/courier-prime-700.otf") format("opentype"), url("../../../fonts/courier-prime-700/courier-prime-700.ttf") format("truetype"), local("Courier Prime Bold"), local("Courier-prime-bold")}@font-face{font-family:"Courier Prime";font-weight:700;font-style:italic;font-display:swap;src:url("../../../fonts/courier-prime-700--italic/courier-prime-700--italic.woff2") format("woff2"), url("../../../fonts/courier-prime-700--italic/courier-prime-700--italic.otf") format("opentype"), url("../../../fonts/courier-prime-700--italic/courier-prime-700--italic.ttf") format("truetype"), local("Courier Prime Bold Italic"), local("Courier-prime-bold-italic")}@font-face{font-family:"Open Sans";font-weight:300;font-style:normal;font-display:swap;src:url("../../../fonts/open-sans-300/open-sans-300.woff2") format("woff2"), url("../../../fonts/open-sans-300/open-sans-300.otf") format("opentype"), url("../../../fonts/open-sans-300/open-sans-300.ttf") format("truetype"), local("Open Sans Light"), local("Open-Sans-300")}@font-face{font-family:"Open Sans";font-weight:300;font-style:italic;font-display:swap;src:url("../../../fonts/open-sans-300--italic/open-sans-300--italic.woff2") format("woff2"), url("../../../fonts/open-sans-300--italic/open-sans-300--italic.otf") format("opentype"), url("../../../fonts/open-sans-300--italic/open-sans-300--italic.ttf") format("truetype"), local("Open Sans Light Italic"), local("Open-Sans-300-italic")}@font-face{font-family:"Open Sans";font-weight:400;font-style:normal;font-display:swap;src:url("../../../fonts/open-sans-400/open-sans-400.woff2") format("woff2"), url("../../../fonts/open-sans-400/open-sans-400.otf") format("opentype"), url("../../../fonts/open-sans-400/open-sans-400.ttf") format("truetype"), local("Open Sans"), local("Open-Sans-regular")}@font-face{font-family:"Open Sans";font-weight:600;font-style:normal;font-display:swap;src:url("../../../fonts/open-sans-600/open-sans-600.woff2") format("woff2"), url("../../../fonts/open-sans-600/open-sans-600.otf") format("opentype"), url("../../../fonts/open-sans-600/open-sans-600.ttf") format("truetype"), local("Open Sans Semibold"), local("Open-Sans-600")}@font-face{font-family:"Open Sans";font-weight:400;font-style:italic;font-display:swap;src:url("../../../fonts/open-sans-400--italic/open-sans-400--italic.woff2") format("woff2"), url("../../../fonts/open-sans-400--italic/open-sans-400--italic.otf") format("opentype"), url("../../../fonts/open-sans-400--italic/open-sans-400--italic.ttf") format("truetype"), local("Open Sans Italic"), local("Open-Sans-italic")}@font-face{font-family:"Open Sans";font-weight:700;font-display:swap;src:url("../../../fonts/open-sans-700/open-sans-700.woff2") format("woff2"), url("../../../fonts/open-sans-700/open-sans-700.otf") format("opentype"), url("../../../fonts/open-sans-700/open-sans-700.ttf") format("truetype"), local("Open Sans Bold"), local("Open-Sans-700")}@font-face{font-family:"Open Sans";font-weight:700;font-style:italic;font-display:swap;src:url("../../../fonts/open-sans-700--italic/open-sans-700--italic.woff2") format("woff2"), url("../../../fonts/open-sans-700--italic/open-sans-700--italic.otf") format("opentype"), url("../../../fonts/open-sans-700--italic/open-sans-700--italic.ttf") format("truetype"), local("Open Sans Bold Italic"), local("Open-Sans-bold-italic")}@font-face{font-family:"Raleway";font-weight:300;font-style:normal;font-display:swap;src:url("../../../fonts/raleway-modified-300/raleway-modified-300.woff2") format("woff2"), url("../../../fonts/raleway-modified-300/raleway-modified-300.otf") format("opentype"), url("../../../fonts/raleway-modified-300/raleway-modified-300.ttf") format("truetype"), local("Raleway Light"), local("Raleway-300")}@font-face{font-family:"Raleway";font-weight:300;font-style:italic;font-display:swap;src:url("../../../fonts/raleway-modified-300--italic/raleway-modified-300--italic.woff2") format("woff2"), url("../../../fonts/raleway-modified-300--italic/raleway-modified-300--italic.otf") format("opentype"), url("../../../fonts/raleway-modified-300--italic/raleway-modified-300--italic.ttf") format("truetype"), local("Raleway Light Italic"), local("Raleway-300-italic")}@font-face{font-family:"Raleway";font-weight:400;font-style:normal;font-display:swap;src:url("../../../fonts/raleway-modified-400/raleway-modified-400.woff2") format("woff2"), url("../../../fonts/raleway-modified-400/raleway-modified-400.otf") format("opentype"), url("../../../fonts/raleway-modified-400/raleway-modified-400.ttf") format("truetype"), local("Raleway"), local("Raleway-400")}@font-face{font-family:"Raleway";font-weight:600;font-style:normal;font-display:swap;src:url("../../../fonts/raleway-modified-600/raleway-modified-600.woff2") format("woff2"), url("../../../fonts/raleway-modified-600/raleway-modified-600.otf") format("opentype"), url("../../../fonts/raleway-modified-600/raleway-modified-600.ttf") format("truetype"), local("Raleway SemiBold"), local("Raleway-600")}@font-face{font-family:"Raleway";font-weight:700;font-style:normal;font-display:swap;src:url("../../../fonts/raleway-modified-700/raleway-modified-700.woff2") format("woff2"), url("../../../fonts/raleway-modified-700/raleway-modified-700.otf") format("opentype"), url("../../../fonts/raleway-modified-700/raleway-modified-700.ttf") format("truetype"), local("Raleway Bold"), local("Raleway-700")}html{font-family:"Open Sans", "Helvetica Neue", Helvetica, Arial, sans-serif;font-size:1rem}body{font-size:1rem;line-height:1.6;background-color:#FFFFFF;color:#1a1a1a;margin:0}p{font-size:inherit;margin-bottom:1.25rem;text-rendering:optimizeLegibility;margin:0 0 1.5rem 0}cite{font-style:italic;line-height:inherit}strong{font-weight:700;line-height:inherit}*,*::before,*::after{box-sizing:inherit}main p,main p:not(.ontario-lead-statement),main dd,main li{max-width:48rem}hr{border:0;padding:0;margin:2.5rem 0;border-bottom:4px solid #cccccc}hr.ontario-hr--dark{border-bottom:4px solid #1a1a1a}a{color:#0066CC;text-decoration:underline}a:visited{color:#551A8B}a:hover{color:#00478F}a:active{color:#002142}a:focus{-moz-box-shadow:0 0 0 4px #009ADB;-webkit-box-shadow:0 0 0 4px #009ADB;box-shadow:0 0 0 4px #009ADB;outline:4px solid transparent;transition:all 0.1s ease-in-out}​p{margin:0 0 1.5rem 0}​p+h1,p+h2,p+h3,p+h4,p+h5,p+h6,ul+h1,ul+h2,ul+h3,ul+h4,ul+h5,ul+h6,ol+h1,ol+h2,ol+h3,ol+h4,ol+h5,ol+h6,h1+h2,h2+h3,h3+h4,h4+h5,h5+h6{margin-top:2rem}p code,td code,li code{line-height:2.25rem}input[type=text],input[type=number],input[type=email],input[type=date],input[type=color],input[type=search],input[type=tel],textarea{background-origin:initial;height:auto;-webkit-appearance:none;-moz-appearance:none}input[type=checkbox]+label,input[type=radio]+label{font-family:"Open Sans", "Helvetica Neue", Helvetica, Arial, sans-serif;font-size:1rem;font-weight:400;margin-left:0;margin-right:0}fieldset{border:0;margin:0;padding:0;page-break-inside:avoid}legend,label{display:block;margin:0}select{background-origin:initial;height:auto;-webkit-appearance:none;-moz-appearance:none}ul,ol{padding:0}ul{margin-left:2rem}ul li{padding:0 0 0.75rem 0}ol{margin-left:1.75rem}ol li{padding:0 0 0.75rem 0.25rem}ul li:last-child,ol li:last-child{padding-bottom:0}ul[class*=columns-] li:last-child,ol[class*=columns-] li:last-child{padding-bottom:0.75rem}ul ul,ol ul{margin:0.5rem 0 0.5rem 2rem}ul ol,ol ol{margin:0.5rem 0 0.5rem 1.75rem}p+ul,p+ol{margin-top:-0.75rem}@media screen and (min-width: 40em){ul{margin:0.5rem 0 1.5rem 3rem}ol{margin:0.5rem 0 1.5rem 2.75rem}ul ul,ol ul{margin:0.5rem 0 0.5rem 3rem}ul ol,ol ol{margin:0.5rem 0 0.5rem 2.75rem}}.ontario-row{margin:0 auto;max-width:72rem;width:100%}.ontario-row:before,.ontario-row:after{content:"";display:table}.ontario-row:after{clear:both}.ontario-row.ontario-row--collapse>.ontario-column,.ontario-row.ontario-row--collapse>.ontario-columns{padding-left:0;padding-right:0}.ontario-row.ontario-row--collapse .ontario-row{margin-left:0;margin-right:0}.ontario-row .ontario-row{margin:0 -1rem;max-width:none;width:auto}.ontario-row .ontario-row:before,.ontario-row .ontario-row:after{content:"";display:table}.ontario-row .ontario-row:after{clear:both}.ontario-row .ontario-row.ontario-row--collapse{margin:0;max-width:none;width:auto}.ontario-row .ontario-row.ontario-row--collapse:before,.ontario-row .ontario-row.ontario-row--collapse:after{content:"";display:table}.ontario-row .ontario-row.ontario-row--collapse:after{clear:both}.ontario-column,.ontario-columns{padding-left:1rem;padding-right:1rem;box-sizing:border-box;width:100%;float:left}.ontario-column+.ontario-column:last-child,.ontario-column+.ontario-columns:last-child,.ontario-columns+.ontario-column:last-child,.ontario-columns+.ontario-columns:last-child{float:right}.ontario-column+.ontario-column.ontario-end,.ontario-column+.ontario-columns.ontario-end,.ontario-columns+.ontario-column.ontario-end,.ontario-columns+.ontario-columns.ontario-end{float:left}@media only screen{.ontario-small-push-0{position:relative;left:0;right:auto}.ontario-small-pull-0{position:relative;right:0;left:auto}.ontario-small-push-1{position:relative;left:8.3333333333%;right:auto}.ontario-small-pull-1{position:relative;right:8.3333333333%;left:auto}.ontario-small-push-2{position:relative;left:16.6666666667%;right:auto}.ontario-small-pull-2{position:relative;right:16.6666666667%;left:auto}.ontario-small-push-3{position:relative;left:25%;right:auto}.ontario-small-pull-3{position:relative;right:25%;left:auto}.ontario-small-push-4{position:relative;left:33.3333333333%;right:auto}.ontario-small-pull-4{position:relative;right:33.3333333333%;left:auto}.ontario-small-push-5{position:relative;left:41.6666666667%;right:auto}.ontario-small-pull-5{position:relative;right:41.6666666667%;left:auto}.ontario-small-push-6{position:relative;left:50%;right:auto}.ontario-small-pull-6{position:relative;right:50%;left:auto}.ontario-small-push-7{position:relative;left:58.3333333333%;right:auto}.ontario-small-pull-7{position:relative;right:58.3333333333%;left:auto}.ontario-small-push-8{position:relative;left:66.6666666667%;right:auto}.ontario-small-pull-8{position:relative;right:66.6666666667%;left:auto}.ontario-small-push-9{position:relative;left:75%;right:auto}.ontario-small-pull-9{position:relative;right:75%;left:auto}.ontario-small-push-10{position:relative;left:83.3333333333%;right:auto}.ontario-small-pull-10{position:relative;right:83.3333333333%;left:auto}.ontario-small-push-11{position:relative;left:91.6666666667%;right:auto}.ontario-small-pull-11{position:relative;right:91.6666666667%;left:auto}.ontario-column,.ontario-columns{position:relative;padding-left:1rem;padding-right:1rem;box-sizing:border-box;float:left}.ontario-small-1{width:8.3333333333%}.ontario-small-2{width:16.6666666667%}.ontario-small-3{width:25%}.ontario-small-4{width:33.3333333333%}.ontario-small-5{width:41.6666666667%}.ontario-small-6{width:50%}.ontario-small-7{width:58.3333333333%}.ontario-small-8{width:66.6666666667%}.ontario-small-9{width:75%}.ontario-small-10{width:83.3333333333%}.ontario-small-11{width:91.6666666667%}.ontario-small-12{width:100%}.ontario-small-offset-0{margin-left:0 !important}.ontario-small-offset-1{margin-left:8.3333333333% !important}.ontario-small-offset-2{margin-left:16.6666666667% !important}.ontario-small-offset-3{margin-left:25% !important}.ontario-small-offset-4{margin-left:33.3333333333% !important}.ontario-small-offset-5{margin-left:41.6666666667% !important}.ontario-small-offset-6{margin-left:50% !important}.ontario-small-offset-7{margin-left:58.3333333333% !important}.ontario-small-offset-8{margin-left:66.6666666667% !important}.ontario-small-offset-9{margin-left:75% !important}.ontario-small-offset-10{margin-left:83.3333333333% !important}.ontario-small-offset-11{margin-left:91.6666666667% !important}.ontario-small-reset-order{float:left;left:auto;margin-left:0;margin-right:0;right:auto}.ontario-column.ontario-small-centered,.ontario-columns.ontario-small-centered{margin-left:auto;margin-right:auto;float:none}.ontario-column.ontario-small-uncentered,.ontario-columns.ontario-small-uncentered{float:left;margin-left:0;margin-right:0}.ontario-column.ontario-small-centered:last-child,.ontario-columns.ontario-small-centered:last-child{float:none}.ontario-column.ontario-small-uncentered:last-child,.ontario-columns.ontario-small-uncentered:last-child{float:left}.ontario-column.ontario-small-uncentered.ontario-opposite,.ontario-columns.ontario-small-uncentered.ontario-opposite{float:right}.ontario-row.ontario-small-collapse>.ontario-column,.ontario-row.ontario-small-collapse>.ontario-columns{padding-left:0;padding-right:0}.ontario-row.ontario-small-collapse .ontario-row{margin-left:0;margin-right:0}.ontario-row.ontario-small-uncollapse>.ontario-column,.ontario-row.ontario-small-uncollapse>.ontario-columns{padding-left:1rem;padding-right:1rem;box-sizing:border-box;float:left}}@media only screen and (min-width:40.063em){.ontario-medium-push-0{position:relative;left:0;right:auto}.ontario-medium-pull-0{position:relative;right:0;left:auto}.ontario-medium-push-1{position:relative;left:8.3333333333%;right:auto}.ontario-medium-pull-1{position:relative;right:8.3333333333%;left:auto}.ontario-medium-push-2{position:relative;left:16.6666666667%;right:auto}.ontario-medium-pull-2{position:relative;right:16.6666666667%;left:auto}.ontario-medium-push-3{position:relative;left:25%;right:auto}.ontario-medium-pull-3{position:relative;right:25%;left:auto}.ontario-medium-push-4{position:relative;left:33.3333333333%;right:auto}.ontario-medium-pull-4{position:relative;right:33.3333333333%;left:auto}.ontario-medium-push-5{position:relative;left:41.6666666667%;right:auto}.ontario-medium-pull-5{position:relative;right:41.6666666667%;left:auto}.ontario-medium-push-6{position:relative;left:50%;right:auto}.ontario-medium-pull-6{position:relative;right:50%;left:auto}.ontario-medium-push-7{position:relative;left:58.3333333333%;right:auto}.ontario-medium-pull-7{position:relative;right:58.3333333333%;left:auto}.ontario-medium-push-8{position:relative;left:66.6666666667%;right:auto}.ontario-medium-pull-8{position:relative;right:66.6666666667%;left:auto}.ontario-medium-push-9{position:relative;left:75%;right:auto}.ontario-medium-pull-9{position:relative;right:75%;left:auto}.ontario-medium-push-10{position:relative;left:83.3333333333%;right:auto}.ontario-medium-pull-10{position:relative;right:83.3333333333%;left:auto}.ontario-medium-push-11{position:relative;left:91.6666666667%;right:auto}.ontario-medium-pull-11{position:relative;right:91.6666666667%;left:auto}.ontario-column,.ontario-columns{position:relative;padding-left:1rem;padding-right:1rem;box-sizing:border-box;float:left}.ontario-medium-1{width:8.3333333333%}.ontario-medium-2{width:16.6666666667%}.ontario-medium-3{width:25%}.ontario-medium-4{width:33.3333333333%}.ontario-medium-5{width:41.6666666667%}.ontario-medium-6{width:50%}.ontario-medium-7{width:58.3333333333%}.ontario-medium-8{width:66.6666666667%}.ontario-medium-9{width:75%}.ontario-medium-10{width:83.3333333333%}.ontario-medium-11{width:91.6666666667%}.ontario-medium-12{width:100%}.ontario-medium-offset-0{margin-left:0 !important}.ontario-medium-offset-1{margin-left:8.3333333333% !important}.ontario-medium-offset-2{margin-left:16.6666666667% !important}.ontario-medium-offset-3{margin-left:25% !important}.ontario-medium-offset-4{margin-left:33.3333333333% !important}.ontario-medium-offset-5{margin-left:41.6666666667% !important}.ontario-medium-offset-6{margin-left:50% !important}.ontario-medium-offset-7{margin-left:58.3333333333% !important}.ontario-medium-offset-8{margin-left:66.6666666667% !important}.ontario-medium-offset-9{margin-left:75% !important}.ontario-medium-offset-10{margin-left:83.3333333333% !important}.ontario-medium-offset-11{margin-left:91.6666666667% !important}.ontario-medium-reset-order{float:left;left:auto;margin-left:0;margin-right:0;right:auto}.ontario-column.ontario-medium-centered,.ontario-columns.ontario-medium-centered{margin-left:auto;margin-right:auto;float:none}.ontario-column.ontario-medium-uncentered,.ontario-columns.ontario-medium-uncentered{float:left;margin-left:0;margin-right:0}.ontario-column.ontario-medium-centered:last-child,.ontario-columns.ontario-medium-centered:last-child{float:none}.ontario-column.ontario-medium-uncentered:last-child,.ontario-columns.ontario-medium-uncentered:last-child{float:left}.ontario-column.ontario-medium-uncentered.ontario-opposite,.ontario-columns.ontario-medium-uncentered.ontario-opposite{float:right}.ontario-row.ontario-medium-collapse>.ontario-column,.ontario-row.ontario-medium-collapse>.ontario-columns{padding-left:0;padding-right:0}.ontario-row.ontario-medium-collapse .ontario-row{margin-left:0;margin-right:0}.ontario-row.ontario-medium-uncollapse>.ontario-column,.ontario-row.ontario-medium-uncollapse>.ontario-columns{padding-left:1rem;padding-right:1rem;box-sizing:border-box;float:left}}@media only screen and (min-width:73.063em){.ontario-large-push-0{position:relative;left:0;right:auto}.ontario-large-pull-0{position:relative;right:0;left:auto}.ontario-large-push-1{position:relative;left:8.3333333333%;right:auto}.ontario-large-pull-1{position:relative;right:8.3333333333%;left:auto}.ontario-large-push-2{position:relative;left:16.6666666667%;right:auto}.ontario-large-pull-2{position:relative;right:16.6666666667%;left:auto}.ontario-large-push-3{position:relative;left:25%;right:auto}.ontario-large-pull-3{position:relative;right:25%;left:auto}.ontario-large-push-4{position:relative;left:33.3333333333%;right:auto}.ontario-large-pull-4{position:relative;right:33.3333333333%;left:auto}.ontario-large-push-5{position:relative;left:41.6666666667%;right:auto}.ontario-large-pull-5{position:relative;right:41.6666666667%;left:auto}.ontario-large-push-6{position:relative;left:50%;right:auto}.ontario-large-pull-6{position:relative;right:50%;left:auto}.ontario-large-push-7{position:relative;left:58.3333333333%;right:auto}.ontario-large-pull-7{position:relative;right:58.3333333333%;left:auto}.ontario-large-push-8{position:relative;left:66.6666666667%;right:auto}.ontario-large-pull-8{position:relative;right:66.6666666667%;left:auto}.ontario-large-push-9{position:relative;left:75%;right:auto}.ontario-large-pull-9{position:relative;right:75%;left:auto}.ontario-large-push-10{position:relative;left:83.3333333333%;right:auto}.ontario-large-pull-10{position:relative;right:83.3333333333%;left:auto}.ontario-large-push-11{position:relative;left:91.6666666667%;right:auto}.ontario-large-pull-11{position:relative;right:91.6666666667%;left:auto}.ontario-column,.ontario-columns{position:relative;padding-left:1rem;padding-right:1rem;box-sizing:border-box;float:left}.ontario-large-1{width:8.3333333333%}.ontario-large-2{width:16.6666666667%}.ontario-large-3{width:25%}.ontario-large-4{width:33.3333333333%}.ontario-large-5{width:41.6666666667%}.ontario-large-6{width:50%}.ontario-large-7{width:58.3333333333%}.ontario-large-8{width:66.6666666667%}.ontario-large-9{width:75%}.ontario-large-10{width:83.3333333333%}.ontario-large-11{width:91.6666666667%}.ontario-large-12{width:100%}.ontario-large-offset-0{margin-left:0 !important}.ontario-large-offset-1{margin-left:8.3333333333% !important}.ontario-large-offset-2{margin-left:16.6666666667% !important}.ontario-large-offset-3{margin-left:25% !important}.ontario-large-offset-4{margin-left:33.3333333333% !important}.ontario-large-offset-5{margin-left:41.6666666667% !important}.ontario-large-offset-6{margin-left:50% !important}.ontario-large-offset-7{margin-left:58.3333333333% !important}.ontario-large-offset-8{margin-left:66.6666666667% !important}.ontario-large-offset-9{margin-left:75% !important}.ontario-large-offset-10{margin-left:83.3333333333% !important}.ontario-large-offset-11{margin-left:91.6666666667% !important}.ontario-large-reset-order{float:left;left:auto;margin-left:0;margin-right:0;right:auto}.ontario-column.ontario-large-centered,.ontario-columns.ontario-large-centered{margin-left:auto;margin-right:auto;float:none}.ontario-column.ontario-large-uncentered,.ontario-columns.ontario-large-uncentered{float:left;margin-left:0;margin-right:0}.ontario-column.ontario-large-centered:last-child,.ontario-columns.ontario-large-centered:last-child{float:none}.ontario-column.ontario-large-uncentered:last-child,.ontario-columns.ontario-large-uncentered:last-child{float:left}.ontario-column.ontario-large-uncentered.ontario-opposite,.ontario-columns.ontario-large-uncentered.ontario-opposite{float:right}.ontario-row.ontario-large-collapse>.ontario-column,.ontario-row.ontario-large-collapse>.ontario-columns{padding-left:0;padding-right:0}.ontario-row.ontario-large-collapse .ontario-row{margin-left:0;margin-right:0}.ontario-row.ontario-large-uncollapse>.ontario-column,.ontario-row.ontario-large-uncollapse>.ontario-columns{padding-left:1rem;padding-right:1rem;box-sizing:border-box;float:left}.ontario-push-0{position:relative;left:0;right:auto}.ontario-pull-0{position:relative;right:0;left:auto}.ontario-push-1{position:relative;left:8.3333333333%;right:auto}.ontario-pull-1{position:relative;right:8.3333333333%;left:auto}.ontario-push-2{position:relative;left:16.6666666667%;right:auto}.ontario-pull-2{position:relative;right:16.6666666667%;left:auto}.ontario-push-3{position:relative;left:25%;right:auto}.ontario-pull-3{position:relative;right:25%;left:auto}.ontario-push-4{position:relative;left:33.3333333333%;right:auto}.ontario-pull-4{position:relative;right:33.3333333333%;left:auto}.ontario-push-5{position:relative;left:41.6666666667%;right:auto}.ontario-pull-5{position:relative;right:41.6666666667%;left:auto}.ontario-push-6{position:relative;left:50%;right:auto}.ontario-pull-6{position:relative;right:50%;left:auto}.ontario-push-7{position:relative;left:58.3333333333%;right:auto}.ontario-pull-7{position:relative;right:58.3333333333%;left:auto}.ontario-push-8{position:relative;left:66.6666666667%;right:auto}.ontario-pull-8{position:relative;right:66.6666666667%;left:auto}.ontario-push-9{position:relative;left:75%;right:auto}.ontario-pull-9{position:relative;right:75%;left:auto}.ontario-push-10{position:relative;left:83.3333333333%;right:auto}.ontario-pull-10{position:relative;right:83.3333333333%;left:auto}.ontario-push-11{position:relative;left:91.6666666667%;right:auto}.ontario-pull-11{position:relative;right:91.6666666667%;left:auto}}@media only screen and (min-width:96.063em){.ontario-xlarge-push-0{position:relative;left:0;right:auto}.ontario-xlarge-pull-0{position:relative;right:0;left:auto}.ontario-xlarge-push-1{position:relative;left:8.3333333333%;right:auto}.ontario-xlarge-pull-1{position:relative;right:8.3333333333%;left:auto}.ontario-xlarge-push-2{position:relative;left:16.6666666667%;right:auto}.ontario-xlarge-pull-2{position:relative;right:16.6666666667%;left:auto}.ontario-xlarge-push-3{position:relative;left:25%;right:auto}.ontario-xlarge-pull-3{position:relative;right:25%;left:auto}.ontario-xlarge-push-4{position:relative;left:33.3333333333%;right:auto}.ontario-xlarge-pull-4{position:relative;right:33.3333333333%;left:auto}.ontario-xlarge-push-5{position:relative;left:41.6666666667%;right:auto}.ontario-xlarge-pull-5{position:relative;right:41.6666666667%;left:auto}.ontario-xlarge-push-6{position:relative;left:50%;right:auto}.ontario-xlarge-pull-6{position:relative;right:50%;left:auto}.ontario-xlarge-push-7{position:relative;left:58.3333333333%;right:auto}.ontario-xlarge-pull-7{position:relative;right:58.3333333333%;left:auto}.ontario-xlarge-push-8{position:relative;left:66.6666666667%;right:auto}.ontario-xlarge-pull-8{position:relative;right:66.6666666667%;left:auto}.ontario-xlarge-push-9{position:relative;left:75%;right:auto}.ontario-xlarge-pull-9{position:relative;right:75%;left:auto}.ontario-xlarge-push-10{position:relative;left:83.3333333333%;right:auto}.ontario-xlarge-pull-10{position:relative;right:83.3333333333%;left:auto}.ontario-xlarge-push-11{position:relative;left:91.6666666667%;right:auto}.ontario-xlarge-pull-11{position:relative;right:91.6666666667%;left:auto}.ontario-column,.ontario-columns{position:relative;padding-left:1rem;padding-right:1rem;box-sizing:border-box;float:left}.ontario-xlarge-1{width:8.3333333333%}.ontario-xlarge-2{width:16.6666666667%}.ontario-xlarge-3{width:25%}.ontario-xlarge-4{width:33.3333333333%}.ontario-xlarge-5{width:41.6666666667%}.ontario-xlarge-6{width:50%}.ontario-xlarge-7{width:58.3333333333%}.ontario-xlarge-8{width:66.6666666667%}.ontario-xlarge-9{width:75%}.ontario-xlarge-10{width:83.3333333333%}.ontario-xlarge-11{width:91.6666666667%}.ontario-xlarge-12{width:100%}.ontario-xlarge-offset-0{margin-left:0 !important}.ontario-xlarge-offset-1{margin-left:8.3333333333% !important}.ontario-xlarge-offset-2{margin-left:16.6666666667% !important}.ontario-xlarge-offset-3{margin-left:25% !important}.ontario-xlarge-offset-4{margin-left:33.3333333333% !important}.ontario-xlarge-offset-5{margin-left:41.6666666667% !important}.ontario-xlarge-offset-6{margin-left:50% !important}.ontario-xlarge-offset-7{margin-left:58.3333333333% !important}.ontario-xlarge-offset-8{margin-left:66.6666666667% !important}.ontario-xlarge-offset-9{margin-left:75% !important}.ontario-xlarge-offset-10{margin-left:83.3333333333% !important}.ontario-xlarge-offset-11{margin-left:91.6666666667% !important}.ontario-xlarge-reset-order{float:left;left:auto;margin-left:0;margin-right:0;right:auto}.ontario-column.ontario-xlarge-centered,.ontario-columns.ontario-xlarge-centered{margin-left:auto;margin-right:auto;float:none}.ontario-column.ontario-xlarge-uncentered,.ontario-columns.ontario-xlarge-uncentered{float:left;margin-left:0;margin-right:0}.ontario-column.ontario-xlarge-centered:last-child,.ontario-columns.ontario-xlarge-centered:last-child{float:none}.ontario-column.ontario-xlarge-uncentered:last-child,.ontario-columns.ontario-xlarge-uncentered:last-child{float:left}.ontario-column.ontario-xlarge-uncentered.ontario-opposite,.ontario-columns.ontario-xlarge-uncentered.ontario-opposite{float:right}.ontario-row.ontario-xlarge-collapse>.ontario-column,.ontario-row.ontario-xlarge-collapse>.ontario-columns{padding-left:0;padding-right:0}.ontario-row.ontario-xlarge-collapse .ontario-row{margin-left:0;margin-right:0}.ontario-row.ontario-xlarge-uncollapse>.ontario-column,.ontario-row.ontario-xlarge-uncollapse>.ontario-columns{padding-left:1rem;padding-right:1rem;box-sizing:border-box;float:left}}@media only screen and (min-width:120.063em){.ontario-xxlarge-push-0{position:relative;left:0;right:auto}.ontario-xxlarge-pull-0{position:relative;right:0;left:auto}.ontario-xxlarge-push-1{position:relative;left:8.3333333333%;right:auto}.ontario-xxlarge-pull-1{position:relative;right:8.3333333333%;left:auto}.ontario-xxlarge-push-2{position:relative;left:16.6666666667%;right:auto}.ontario-xxlarge-pull-2{position:relative;right:16.6666666667%;left:auto}.ontario-xxlarge-push-3{position:relative;left:25%;right:auto}.ontario-xxlarge-pull-3{position:relative;right:25%;left:auto}.ontario-xxlarge-push-4{position:relative;left:33.3333333333%;right:auto}.ontario-xxlarge-pull-4{position:relative;right:33.3333333333%;left:auto}.ontario-xxlarge-push-5{position:relative;left:41.6666666667%;right:auto}.ontario-xxlarge-pull-5{position:relative;right:41.6666666667%;left:auto}.ontario-xxlarge-push-6{position:relative;left:50%;right:auto}.ontario-xxlarge-pull-6{position:relative;right:50%;left:auto}.ontario-xxlarge-push-7{position:relative;left:58.3333333333%;right:auto}.ontario-xxlarge-pull-7{position:relative;right:58.3333333333%;left:auto}.ontario-xxlarge-push-8{position:relative;left:66.6666666667%;right:auto}.ontario-xxlarge-pull-8{position:relative;right:66.6666666667%;left:auto}.ontario-xxlarge-push-9{position:relative;left:75%;right:auto}.ontario-xxlarge-pull-9{position:relative;right:75%;left:auto}.ontario-xxlarge-push-10{position:relative;left:83.3333333333%;right:auto}.ontario-xxlarge-pull-10{position:relative;right:83.3333333333%;left:auto}.ontario-xxlarge-push-11{position:relative;left:91.6666666667%;right:auto}.ontario-xxlarge-pull-11{position:relative;right:91.6666666667%;left:auto}.ontario-column,.ontario-columns{position:relative;padding-left:1rem;padding-right:1rem;box-sizing:border-box;float:left}.ontario-xxlarge-1{width:8.3333333333%}.ontario-xxlarge-2{width:16.6666666667%}.ontario-xxlarge-3{width:25%}.ontario-xxlarge-4{width:33.3333333333%}.ontario-xxlarge-5{width:41.6666666667%}.ontario-xxlarge-6{width:50%}.ontario-xxlarge-7{width:58.3333333333%}.ontario-xxlarge-8{width:66.6666666667%}.ontario-xxlarge-9{width:75%}.ontario-xxlarge-10{width:83.3333333333%}.ontario-xxlarge-11{width:91.6666666667%}.ontario-xxlarge-12{width:100%}.ontario-xxlarge-offset-0{margin-left:0 !important}.ontario-xxlarge-offset-1{margin-left:8.3333333333% !important}.ontario-xxlarge-offset-2{margin-left:16.6666666667% !important}.ontario-xxlarge-offset-3{margin-left:25% !important}.ontario-xxlarge-offset-4{margin-left:33.3333333333% !important}.ontario-xxlarge-offset-5{margin-left:41.6666666667% !important}.ontario-xxlarge-offset-6{margin-left:50% !important}.ontario-xxlarge-offset-7{margin-left:58.3333333333% !important}.ontario-xxlarge-offset-8{margin-left:66.6666666667% !important}.ontario-xxlarge-offset-9{margin-left:75% !important}.ontario-xxlarge-offset-10{margin-left:83.3333333333% !important}.ontario-xxlarge-offset-11{margin-left:91.6666666667% !important}.ontario-xxlarge-reset-order{float:left;left:auto;margin-left:0;margin-right:0;right:auto}.ontario-column.ontario-xxlarge-centered,.ontario-columns.ontario-xxlarge-centered{margin-left:auto;margin-right:auto;float:none}.ontario-column.ontario-xxlarge-uncentered,.ontario-columns.ontario-xxlarge-uncentered{float:left;margin-left:0;margin-right:0}.ontario-column.ontario-xxlarge-centered:last-child,.ontario-columns.ontario-xxlarge-centered:last-child{float:none}.ontario-column.ontario-xxlarge-uncentered:last-child,.ontario-columns.ontario-xxlarge-uncentered:last-child{float:left}.ontario-column.ontario-xxlarge-uncentered.ontario-opposite,.ontario-columns.ontario-xxlarge-uncentered.ontario-opposite{float:right}.ontario-row.ontario-xxlarge-collapse>.ontario-column,.ontario-row.ontario-xxlarge-collapse>.ontario-columns{padding-left:0;padding-right:0}.ontario-row.ontario-xxlarge-collapse .ontario-row{margin-left:0;margin-right:0}.ontario-row.ontario-xxlarge-uncollapse>.ontario-column,.ontario-row.ontario-xxlarge-uncollapse>.ontario-columns{padding-left:1rem;padding-right:1rem;box-sizing:border-box;float:left}}.ontario-form-group:last-of-type{margin-bottom:2.5rem}.ontario-form-group:last-of-type{margin-bottom:3rem}.ontario-fieldset__legend{color:#1a1a1a;font-family:"Raleway", "Open Sans", "Helvetica Neue", Helvetica, Arial, sans-serif;font-size:1.1875rem;font-weight:700;margin:0 0 1rem 0;line-height:1.5;max-width:38.75em;white-space:normal;width:100%;hyphens:auto}@media screen and (max-width: 40em){.ontario-fieldset__legend{font-size:1.125rem;line-height:1.56}}.ontario-fieldset__legend--large,.ontario-fieldset__legend--heading{letter-spacing:0.02rem;line-height:1.2}.ontario-fieldset__legend--large h1,.ontario-fieldset__legend--heading h1{display:inline-block;margin:0}@media screen and (max-width: 40em){.ontario-fieldset__legend--large,.ontario-fieldset__legend--heading{font-size:1.4375rem;line-height:1.39}}.ontario-fieldset__legend--large{font-size:1.75rem}.ontario-fieldset__legend-required-flag,.ontario-fieldset__legend-optional-flag{font-family:"Open Sans", "Helvetica Neue", Helvetica, Arial, sans-serif;font-size:1rem;font-weight:400}.ontario-fieldset__legend-required-flag:before,.ontario-fieldset__legend-optional-flag:before{content:" "}.ontario-label__flag{font-family:"Open Sans", "Helvetica Neue", Helvetica, Arial, sans-serif;font-size:1rem;font-weight:400}.ontario-label__flag:before{content:" "}.ontario-label{cursor:pointer;color:#1a1a1a;font-family:"Raleway", "Open Sans", "Helvetica Neue", Helvetica, Arial, sans-serif;font-size:1.1875rem;font-weight:700;line-height:1.5;margin:0 0 1rem 0;max-width:38.75em;white-space:normal;width:100%;hyphens:auto}@media screen and (max-width: 40em){.ontario-label{font-size:1.125rem;line-height:1.56}}.ontario-label--large{font-size:1.75rem;letter-spacing:0.02rem;line-height:1.2;max-width:26.25em}@media screen and (max-width: 40em){.ontario-label--large{font-size:1.4375rem;line-height:1.39}}h1>.ontario-label--heading{display:inline-block;margin:0}.ontario-label__flag{font-family:"Open Sans", "Helvetica Neue", Helvetica, Arial, sans-serif;font-size:1rem;font-weight:400}.ontario-label__flag:before{content:" "}.ontario-input{border:2px solid #1a1a1a;border-radius:4px;box-sizing:border-box;color:#1a1a1a;display:block;font-size:1rem;font-family:"Open Sans", "Helvetica Neue", Helvetica, Arial, sans-serif;line-height:1.5;margin:0 0 2.5rem;max-width:48rem;width:100%;padding:0.625rem 1rem;transition:box-shadow 0.1s ease-in-out}.ontario-input--2-char-width{max-width:8ex}.ontario-input--3-char-width{max-width:10ex}.ontario-input--4-char-width{max-width:12ex}.ontario-input--5-char-width{max-width:14ex}.ontario-input--7-char-width{max-width:17ex}.ontario-input--10-char-width{max-width:23ex}.ontario-input--20-char-width{max-width:41ex}.ontario-form-group:last-of-type{margin-bottom:2.5rem}.ontario-aside *:last-of-type,.ontario-callout *:last-of-type{margin-bottom:0.5rem}ontario-aside *,ontario-callout *{max-width:48rem}ontario-aside *:last-of-type,ontario-callout *:last-of-type{margin-bottom:0.5rem}ontario-page-alert p{margin-top:0}ontario-page-alert p:last-of-type{margin-bottom:0.5rem}ontario-page-alert p:last-of-type+ul{margin-top:1rem}ontario-page-alert ul:last-of-type{margin-bottom:0.5rem}ontario-page-alert[type=error] ul{margin-left:1.5rem}ontario-page-alert[type=error] ul:last-of-type{margin-bottom:0.5rem}ontario-page-alert[type=error] a{color:#CD0000}ontario-page-alert[type=error] a:hover,ontario-page-alert[type=error] a:focus{color:#6b0000}ontario-page-alert[type=error] a:active{color:#280000}.ontario-hide{display:none !important}.ontario-invisible{visibility:hidden !important}@media screen and (max-width: 39.99875em){.ontario-hide-for-small-only{display:none !important}}@media screen and (max-width: 0em), screen and (min-width: 40em){.ontario-show-for-small-only{display:none !important}}@media print, screen and (min-width: 40em){.ontario-hide-for-medium{display:none !important}}@media screen and (max-width: 39.99875em){.ontario-show-for-medium{display:none !important}}@media screen and (min-width: 40em) and (max-width: 72.99875em){.ontario-hide-for-medium-only{display:none !important}}@media screen and (max-width: 39.99875em), screen and (min-width: 73em){.ontario-show-for-medium-only{display:none !important}}@media print, screen and (min-width: 73em){.ontario-hide-for-large{display:none !important}}@media screen and (max-width: 72.99875em){.ontario-show-for-large{display:none !important}}@media screen and (min-width: 73em) and (max-width: 95.99875em){.ontario-hide-for-large-only{display:none !important}}@media screen and (max-width: 72.99875em), screen and (min-width: 96em){.ontario-show-for-large-only{display:none !important}}.ontario-show-for-sr,.ontario-show-on-focus{position:absolute;width:1px;height:1px;overflow:hidden;clip:rect(0, 0, 0, 0)}.ontario-show-on-focus:active,.ontario-show-on-focus:focus{position:static;width:auto;height:auto;overflow:visible;clip:auto}.ontario-show-for-landscape,.ontario-hide-for-portrait{display:block !important}@media screen and (orientation: landscape){.ontario-show-for-landscape,.ontario-hide-for-portrait{display:block !important}}@media screen and (orientation: portrait){.ontario-show-for-landscape,.ontario-hide-for-portrait{display:none !important}}.ontario-hide-for-landscape,.ontario-show-for-portrait{display:none !important}@media screen and (orientation: landscape){.ontario-hide-for-landscape,.ontario-show-for-portrait{display:none !important}}@media screen and (orientation: portrait){.ontario-hide-for-landscape,.ontario-show-for-portrait{display:block !important}}';

/*
 Stencil Client Platform v4.33.1 | MIT Licensed | https://stenciljs.com
 */
var __defProp = Object.defineProperty;
var __export = (target, all) => {
	for (var name in all) __defProp(target, name, { get: all[name], enumerable: true });
};

// src/utils/constants.ts
var SVG_NS = 'http://www.w3.org/2000/svg';
var HTML_NS = 'http://www.w3.org/1999/xhtml';

// src/utils/es2022-rewire-class-members.ts
var reWireGetterSetter = (instance, hostRef) => {
	var _a;
	const cmpMeta = hostRef.$cmpMeta$;
	const members = Object.entries((_a = cmpMeta.$members$) != null ? _a : {});
	members.map(([memberName, [memberFlags]]) => {
		if (memberFlags & 31 /* Prop */ || memberFlags & 32 /* State */) {
			const ogValue = instance[memberName];
			const ogDescriptor = Object.getOwnPropertyDescriptor(Object.getPrototypeOf(instance), memberName);
			Object.defineProperty(instance, memberName, {
				get() {
					return ogDescriptor.get.call(this);
				},
				set(newValue) {
					ogDescriptor.set.call(this, newValue);
				},
				configurable: true,
				enumerable: true,
			});
			instance[memberName] = hostRef.$instanceValues$.has(memberName)
				? hostRef.$instanceValues$.get(memberName)
				: ogValue;
		}
	});
};

// src/client/client-host-ref.ts
var getHostRef = (ref) => {
	if (ref.__stencil__getHostRef) {
		return ref.__stencil__getHostRef();
	}
	return void 0;
};
var registerInstance = (lazyInstance, hostRef) => {
	lazyInstance.__stencil__getHostRef = () => hostRef;
	hostRef.$lazyInstance$ = lazyInstance;
	{
		reWireGetterSetter(lazyInstance, hostRef);
	}
};
var registerHost = (hostElement, cmpMeta) => {
	const hostRef = {
		$flags$: 0,
		$hostElement$: hostElement,
		$cmpMeta$: cmpMeta,
		$instanceValues$: /* @__PURE__ */ new Map(),
	};
	{
		hostRef.$onInstancePromise$ = new Promise((r) => (hostRef.$onInstanceResolve$ = r));
	}
	{
		hostRef.$onReadyPromise$ = new Promise((r) => (hostRef.$onReadyResolve$ = r));
		hostElement['s-p'] = [];
		hostElement['s-rc'] = [];
	}
	const ref = hostRef;
	hostElement.__stencil__getHostRef = () => ref;
	return ref;
};
var isMemberInElement = (elm, memberName) => memberName in elm;
var consoleError = (e, el) => (0, console.error)(e, el);

// src/client/client-load-module.ts
var cmpModules = /* @__PURE__ */ new Map();
var loadModule = (cmpMeta, hostRef, hmrVersionId) => {
	const exportName = cmpMeta.$tagName$.replace(/-/g, '_');
	const bundleId = cmpMeta.$lazyBundleId$;
	if (!bundleId) {
		return void 0;
	}
	const module = cmpModules.get(bundleId);
	if (module) {
		return module[exportName];
	}

	if (!hmrVersionId || !BUILD.hotModuleReplacement) {
		const processMod = (importedModule) => {
			cmpModules.set(bundleId, importedModule);
			return importedModule[exportName];
		};
		switch (bundleId) {
			case 'ontario-icon-account':
				return import(
					/* webpackMode: "lazy" */
					'./ontario-icon-account.entry.js'
				).then(processMod, consoleError);
			case 'ontario-icon-add':
				return import(
					/* webpackMode: "lazy" */
					'./ontario-icon-add.entry.js'
				).then(processMod, consoleError);
			case 'ontario-icon-add-alt':
				return import(
					/* webpackMode: "lazy" */
					'./ontario-icon-add-alt.entry.js'
				).then(processMod, consoleError);
			case 'ontario-icon-arrow-up':
				return import(
					/* webpackMode: "lazy" */
					'./ontario-icon-arrow-up.entry.js'
				).then(processMod, consoleError);
			case 'ontario-icon-attach':
				return import(
					/* webpackMode: "lazy" */
					'./ontario-icon-attach.entry.js'
				).then(processMod, consoleError);
			case 'ontario-icon-bookmark-off':
				return import(
					/* webpackMode: "lazy" */
					'./ontario-icon-bookmark-off.entry.js'
				).then(processMod, consoleError);
			case 'ontario-icon-bookmark-on':
				return import(
					/* webpackMode: "lazy" */
					'./ontario-icon-bookmark-on.entry.js'
				).then(processMod, consoleError);
			case 'ontario-icon-calendar':
				return import(
					/* webpackMode: "lazy" */
					'./ontario-icon-calendar.entry.js'
				).then(processMod, consoleError);
			case 'ontario-icon-chevron-right':
				return import(
					/* webpackMode: "lazy" */
					'./ontario-icon-chevron-right.entry.js'
				).then(processMod, consoleError);
			case 'ontario-icon-clock':
				return import(
					/* webpackMode: "lazy" */
					'./ontario-icon-clock.entry.js'
				).then(processMod, consoleError);
			case 'ontario-icon-close':
				return import(
					/* webpackMode: "lazy" */
					'./ontario-icon-close.entry.js'
				).then(processMod, consoleError);
			case 'ontario-icon-close-header':
				return import(
					/* webpackMode: "lazy" */
					'./ontario-icon-close-header.entry.js'
				).then(processMod, consoleError);
			case 'ontario-icon-cloud':
				return import(
					/* webpackMode: "lazy" */
					'./ontario-icon-cloud.entry.js'
				).then(processMod, consoleError);
			case 'ontario-icon-collapse':
				return import(
					/* webpackMode: "lazy" */
					'./ontario-icon-collapse.entry.js'
				).then(processMod, consoleError);
			case 'ontario-icon-credit-card':
				return import(
					/* webpackMode: "lazy" */
					'./ontario-icon-credit-card.entry.js'
				).then(processMod, consoleError);
			case 'ontario-icon-critical-alert-warning':
				return import(
					/* webpackMode: "lazy" */
					'./ontario-icon-critical-alert-warning.entry.js'
				).then(processMod, consoleError);
			case 'ontario-icon-delete':
				return import(
					/* webpackMode: "lazy" */
					'./ontario-icon-delete.entry.js'
				).then(processMod, consoleError);
			case 'ontario-icon-document':
				return import(
					/* webpackMode: "lazy" */
					'./ontario-icon-document.entry.js'
				).then(processMod, consoleError);
			case 'ontario-icon-download':
				return import(
					/* webpackMode: "lazy" */
					'./ontario-icon-download.entry.js'
				).then(processMod, consoleError);
			case 'ontario-icon-dropdown-arrow':
				return import(
					/* webpackMode: "lazy" */
					'./ontario-icon-dropdown-arrow.entry.js'
				).then(processMod, consoleError);
			case 'ontario-icon-edit':
				return import(
					/* webpackMode: "lazy" */
					'./ontario-icon-edit.entry.js'
				).then(processMod, consoleError);
			case 'ontario-icon-expand':
				return import(
					/* webpackMode: "lazy" */
					'./ontario-icon-expand.entry.js'
				).then(processMod, consoleError);
			case 'ontario-icon-export':
				return import(
					/* webpackMode: "lazy" */
					'./ontario-icon-export.entry.js'
				).then(processMod, consoleError);
			case 'ontario-icon-facebook':
				return import(
					/* webpackMode: "lazy" */
					'./ontario-icon-facebook.entry.js'
				).then(processMod, consoleError);
			case 'ontario-icon-facebook-alt':
				return import(
					/* webpackMode: "lazy" */
					'./ontario-icon-facebook-alt.entry.js'
				).then(processMod, consoleError);
			case 'ontario-icon-favourite-off':
				return import(
					/* webpackMode: "lazy" */
					'./ontario-icon-favourite-off.entry.js'
				).then(processMod, consoleError);
			case 'ontario-icon-favourite-on':
				return import(
					/* webpackMode: "lazy" */
					'./ontario-icon-favourite-on.entry.js'
				).then(processMod, consoleError);
			case 'ontario-icon-filter':
				return import(
					/* webpackMode: "lazy" */
					'./ontario-icon-filter.entry.js'
				).then(processMod, consoleError);
			case 'ontario-icon-flickr':
				return import(
					/* webpackMode: "lazy" */
					'./ontario-icon-flickr.entry.js'
				).then(processMod, consoleError);
			case 'ontario-icon-grid':
				return import(
					/* webpackMode: "lazy" */
					'./ontario-icon-grid.entry.js'
				).then(processMod, consoleError);
			case 'ontario-icon-instagram':
				return import(
					/* webpackMode: "lazy" */
					'./ontario-icon-instagram.entry.js'
				).then(processMod, consoleError);
			case 'ontario-icon-interac-en':
				return import(
					/* webpackMode: "lazy" */
					'./ontario-icon-interac-en.entry.js'
				).then(processMod, consoleError);
			case 'ontario-icon-interac-en-alt':
				return import(
					/* webpackMode: "lazy" */
					'./ontario-icon-interac-en-alt.entry.js'
				).then(processMod, consoleError);
			case 'ontario-icon-interac-fr':
				return import(
					/* webpackMode: "lazy" */
					'./ontario-icon-interac-fr.entry.js'
				).then(processMod, consoleError);
			case 'ontario-icon-interac-fr-alt':
				return import(
					/* webpackMode: "lazy" */
					'./ontario-icon-interac-fr-alt.entry.js'
				).then(processMod, consoleError);
			case 'ontario-icon-linkedin':
				return import(
					/* webpackMode: "lazy" */
					'./ontario-icon-linkedin.entry.js'
				).then(processMod, consoleError);
			case 'ontario-icon-linkedin-alt':
				return import(
					/* webpackMode: "lazy" */
					'./ontario-icon-linkedin-alt.entry.js'
				).then(processMod, consoleError);
			case 'ontario-icon-list':
				return import(
					/* webpackMode: "lazy" */
					'./ontario-icon-list.entry.js'
				).then(processMod, consoleError);
			case 'ontario-icon-live-chat':
				return import(
					/* webpackMode: "lazy" */
					'./ontario-icon-live-chat.entry.js'
				).then(processMod, consoleError);
			case 'ontario-icon-location-off':
				return import(
					/* webpackMode: "lazy" */
					'./ontario-icon-location-off.entry.js'
				).then(processMod, consoleError);
			case 'ontario-icon-location-on':
				return import(
					/* webpackMode: "lazy" */
					'./ontario-icon-location-on.entry.js'
				).then(processMod, consoleError);
			case 'ontario-icon-lock-off':
				return import(
					/* webpackMode: "lazy" */
					'./ontario-icon-lock-off.entry.js'
				).then(processMod, consoleError);
			case 'ontario-icon-lock-on':
				return import(
					/* webpackMode: "lazy" */
					'./ontario-icon-lock-on.entry.js'
				).then(processMod, consoleError);
			case 'ontario-icon-map':
				return import(
					/* webpackMode: "lazy" */
					'./ontario-icon-map.entry.js'
				).then(processMod, consoleError);
			case 'ontario-icon-mastercard-alt':
				return import(
					/* webpackMode: "lazy" */
					'./ontario-icon-mastercard-alt.entry.js'
				).then(processMod, consoleError);
			case 'ontario-icon-media-fast-forward':
				return import(
					/* webpackMode: "lazy" */
					'./ontario-icon-media-fast-forward.entry.js'
				).then(processMod, consoleError);
			case 'ontario-icon-media-fast-rewind':
				return import(
					/* webpackMode: "lazy" */
					'./ontario-icon-media-fast-rewind.entry.js'
				).then(processMod, consoleError);
			case 'ontario-icon-media-pause':
				return import(
					/* webpackMode: "lazy" */
					'./ontario-icon-media-pause.entry.js'
				).then(processMod, consoleError);
			case 'ontario-icon-media-play':
				return import(
					/* webpackMode: "lazy" */
					'./ontario-icon-media-play.entry.js'
				).then(processMod, consoleError);
			case 'ontario-icon-media-stop':
				return import(
					/* webpackMode: "lazy" */
					'./ontario-icon-media-stop.entry.js'
				).then(processMod, consoleError);
			case 'ontario-icon-menu':
				return import(
					/* webpackMode: "lazy" */
					'./ontario-icon-menu.entry.js'
				).then(processMod, consoleError);
			case 'ontario-icon-menu-header':
				return import(
					/* webpackMode: "lazy" */
					'./ontario-icon-menu-header.entry.js'
				).then(processMod, consoleError);
			case 'ontario-icon-microphone-off':
				return import(
					/* webpackMode: "lazy" */
					'./ontario-icon-microphone-off.entry.js'
				).then(processMod, consoleError);
			case 'ontario-icon-microphone-on':
				return import(
					/* webpackMode: "lazy" */
					'./ontario-icon-microphone-on.entry.js'
				).then(processMod, consoleError);
			case 'ontario-icon-more-vertical':
				return import(
					/* webpackMode: "lazy" */
					'./ontario-icon-more-vertical.entry.js'
				).then(processMod, consoleError);
			case 'ontario-icon-new-window':
				return import(
					/* webpackMode: "lazy" */
					'./ontario-icon-new-window.entry.js'
				).then(processMod, consoleError);
			case 'ontario-icon-next':
				return import(
					/* webpackMode: "lazy" */
					'./ontario-icon-next.entry.js'
				).then(processMod, consoleError);
			case 'ontario-icon-password-hide':
				return import(
					/* webpackMode: "lazy" */
					'./ontario-icon-password-hide.entry.js'
				).then(processMod, consoleError);
			case 'ontario-icon-password-show':
				return import(
					/* webpackMode: "lazy" */
					'./ontario-icon-password-show.entry.js'
				).then(processMod, consoleError);
			case 'ontario-icon-phone':
				return import(
					/* webpackMode: "lazy" */
					'./ontario-icon-phone.entry.js'
				).then(processMod, consoleError);
			case 'ontario-icon-photo':
				return import(
					/* webpackMode: "lazy" */
					'./ontario-icon-photo.entry.js'
				).then(processMod, consoleError);
			case 'ontario-icon-pin-location-off':
				return import(
					/* webpackMode: "lazy" */
					'./ontario-icon-pin-location-off.entry.js'
				).then(processMod, consoleError);
			case 'ontario-icon-pin-location-on':
				return import(
					/* webpackMode: "lazy" */
					'./ontario-icon-pin-location-on.entry.js'
				).then(processMod, consoleError);
			case 'ontario-icon-previous':
				return import(
					/* webpackMode: "lazy" */
					'./ontario-icon-previous.entry.js'
				).then(processMod, consoleError);
			case 'ontario-icon-remove':
				return import(
					/* webpackMode: "lazy" */
					'./ontario-icon-remove.entry.js'
				).then(processMod, consoleError);
			case 'ontario-icon-remove-alt':
				return import(
					/* webpackMode: "lazy" */
					'./ontario-icon-remove-alt.entry.js'
				).then(processMod, consoleError);
			case 'ontario-icon-replay':
				return import(
					/* webpackMode: "lazy" */
					'./ontario-icon-replay.entry.js'
				).then(processMod, consoleError);
			case 'ontario-icon-rss-feed':
				return import(
					/* webpackMode: "lazy" */
					'./ontario-icon-rss-feed.entry.js'
				).then(processMod, consoleError);
			case 'ontario-icon-save':
				return import(
					/* webpackMode: "lazy" */
					'./ontario-icon-save.entry.js'
				).then(processMod, consoleError);
			case 'ontario-icon-search':
				return import(
					/* webpackMode: "lazy" */
					'./ontario-icon-search.entry.js'
				).then(processMod, consoleError);
			case 'ontario-icon-search-white':
				return import(
					/* webpackMode: "lazy" */
					'./ontario-icon-search-white.entry.js'
				).then(processMod, consoleError);
			case 'ontario-icon-sentiment-1':
				return import(
					/* webpackMode: "lazy" */
					'./ontario-icon-sentiment-1.entry.js'
				).then(processMod, consoleError);
			case 'ontario-icon-sentiment-2':
				return import(
					/* webpackMode: "lazy" */
					'./ontario-icon-sentiment-2.entry.js'
				).then(processMod, consoleError);
			case 'ontario-icon-sentiment-3':
				return import(
					/* webpackMode: "lazy" */
					'./ontario-icon-sentiment-3.entry.js'
				).then(processMod, consoleError);
			case 'ontario-icon-sentiment-4':
				return import(
					/* webpackMode: "lazy" */
					'./ontario-icon-sentiment-4.entry.js'
				).then(processMod, consoleError);
			case 'ontario-icon-settings':
				return import(
					/* webpackMode: "lazy" */
					'./ontario-icon-settings.entry.js'
				).then(processMod, consoleError);
			case 'ontario-icon-share':
				return import(
					/* webpackMode: "lazy" */
					'./ontario-icon-share.entry.js'
				).then(processMod, consoleError);
			case 'ontario-icon-sort':
				return import(
					/* webpackMode: "lazy" */
					'./ontario-icon-sort.entry.js'
				).then(processMod, consoleError);
			case 'ontario-icon-tag':
				return import(
					/* webpackMode: "lazy" */
					'./ontario-icon-tag.entry.js'
				).then(processMod, consoleError);
			case 'ontario-icon-timer':
				return import(
					/* webpackMode: "lazy" */
					'./ontario-icon-timer.entry.js'
				).then(processMod, consoleError);
			case 'ontario-icon-transport-bicycle':
				return import(
					/* webpackMode: "lazy" */
					'./ontario-icon-transport-bicycle.entry.js'
				).then(processMod, consoleError);
			case 'ontario-icon-transport-car':
				return import(
					/* webpackMode: "lazy" */
					'./ontario-icon-transport-car.entry.js'
				).then(processMod, consoleError);
			case 'ontario-icon-transport-walk':
				return import(
					/* webpackMode: "lazy" */
					'./ontario-icon-transport-walk.entry.js'
				).then(processMod, consoleError);
			case 'ontario-icon-tty':
				return import(
					/* webpackMode: "lazy" */
					'./ontario-icon-tty.entry.js'
				).then(processMod, consoleError);
			case 'ontario-icon-twitter':
				return import(
					/* webpackMode: "lazy" */
					'./ontario-icon-twitter.entry.js'
				).then(processMod, consoleError);
			case 'ontario-icon-twitter-alt':
				return import(
					/* webpackMode: "lazy" */
					'./ontario-icon-twitter-alt.entry.js'
				).then(processMod, consoleError);
			case 'ontario-icon-upload':
				return import(
					/* webpackMode: "lazy" */
					'./ontario-icon-upload.entry.js'
				).then(processMod, consoleError);
			case 'ontario-icon-video':
				return import(
					/* webpackMode: "lazy" */
					'./ontario-icon-video.entry.js'
				).then(processMod, consoleError);
			case 'ontario-icon-visa':
				return import(
					/* webpackMode: "lazy" */
					'./ontario-icon-visa.entry.js'
				).then(processMod, consoleError);
			case 'ontario-icon-vote-dislike':
				return import(
					/* webpackMode: "lazy" */
					'./ontario-icon-vote-dislike.entry.js'
				).then(processMod, consoleError);
			case 'ontario-icon-vote-like':
				return import(
					/* webpackMode: "lazy" */
					'./ontario-icon-vote-like.entry.js'
				).then(processMod, consoleError);
			case 'ontario-icon-vpn-key':
				return import(
					/* webpackMode: "lazy" */
					'./ontario-icon-vpn-key.entry.js'
				).then(processMod, consoleError);
			case 'ontario-icon-wheelchair':
				return import(
					/* webpackMode: "lazy" */
					'./ontario-icon-wheelchair.entry.js'
				).then(processMod, consoleError);
			case 'ontario-icon-wifi':
				return import(
					/* webpackMode: "lazy" */
					'./ontario-icon-wifi.entry.js'
				).then(processMod, consoleError);
			case 'ontario-icon-youtube':
				return import(
					/* webpackMode: "lazy" */
					'./ontario-icon-youtube.entry.js'
				).then(processMod, consoleError);
			case 'ontario-accordion_46':
				return import(
					/* webpackMode: "lazy" */
					'./ontario-accordion_46.entry.js'
				).then(processMod, consoleError);
		}
	}
	return import(
		/* @vite-ignore */
		/* webpackInclude: /\.entry\.js$/ */
		/* webpackExclude: /\.system\.entry\.js$/ */
		/* webpackMode: "lazy" */
		`./${bundleId}.entry.js${''}`
	).then(
		(importedModule) => {
			{
				cmpModules.set(bundleId, importedModule);
			}
			return importedModule[exportName];
		},
		(e) => {
			consoleError(e, hostRef.$hostElement$);
		},
	);
};

// src/client/client-style.ts
var styles = /* @__PURE__ */ new Map();
var HYDRATED_STYLE_ID = 'sty-id';
var HYDRATED_CSS = '{visibility:hidden}.hydrated{visibility:inherit}';
var SLOT_FB_CSS = 'slot-fb{display:contents}slot-fb[hidden]{display:none}';
var XLINK_NS = 'http://www.w3.org/1999/xlink';
var FORM_ASSOCIATED_CUSTOM_ELEMENT_CALLBACKS = [
	'formAssociatedCallback',
	'formResetCallback',
	'formDisabledCallback',
	'formStateRestoreCallback',
];
var win = typeof window !== 'undefined' ? window : {};
var plt = {
	$flags$: 0,
	$resourcesUrl$: '',
	jmp: (h2) => h2(),
	raf: (h2) => requestAnimationFrame(h2),
	ael: (el, eventName, listener, opts) => el.addEventListener(eventName, listener, opts),
	rel: (el, eventName, listener, opts) => el.removeEventListener(eventName, listener, opts),
	ce: (eventName, opts) => new CustomEvent(eventName, opts),
};
var supportsListenerOptions = /* @__PURE__ */ (() => {
	var _a;
	let supportsListenerOptions2 = false;
	try {
		(_a = win.document) == null
			? void 0
			: _a.addEventListener(
					'e',
					null,
					Object.defineProperty({}, 'passive', {
						get() {
							supportsListenerOptions2 = true;
						},
					}),
				);
	} catch (e) {}
	return supportsListenerOptions2;
})();
var promiseResolve = (v) => Promise.resolve(v);
var supportsConstructableStylesheets = /* @__PURE__ */ (() => {
	try {
		new CSSStyleSheet();
		return typeof new CSSStyleSheet().replaceSync === 'function';
	} catch (e) {}
	return false;
})();
var queuePending = false;
var queueDomReads = [];
var queueDomWrites = [];
var queueTask = (queue, write) => (cb) => {
	queue.push(cb);
	if (!queuePending) {
		queuePending = true;
		if (write && plt.$flags$ & 4 /* queueSync */) {
			nextTick(flush);
		} else {
			plt.raf(flush);
		}
	}
};
var consume = (queue) => {
	for (let i2 = 0; i2 < queue.length; i2++) {
		try {
			queue[i2](performance.now());
		} catch (e) {
			consoleError(e);
		}
	}
	queue.length = 0;
};
var flush = () => {
	consume(queueDomReads);
	{
		consume(queueDomWrites);
		if ((queuePending = queueDomReads.length > 0)) {
			plt.raf(flush);
		}
	}
};
var nextTick = (cb) => promiseResolve().then(cb);
var writeTask = /* @__PURE__ */ queueTask(queueDomWrites, true);

// src/runtime/asset-path.ts
var getAssetPath = (path) => {
	const assetUrl = new URL(path, plt.$resourcesUrl$);
	return assetUrl.origin !== win.location.origin ? assetUrl.href : assetUrl.pathname;
};
var isComplexType = (o) => {
	o = typeof o;
	return o === 'object' || o === 'function';
};

// src/utils/query-nonce-meta-tag-content.ts
function queryNonceMetaTagContent(doc) {
	var _a, _b, _c;
	return (_c =
		(_b = (_a = doc.head) == null ? void 0 : _a.querySelector('meta[name="csp-nonce"]')) == null
			? void 0
			: _b.getAttribute('content')) != null
		? _c
		: void 0;
}

// src/utils/regular-expression.ts
var escapeRegExpSpecialCharacters = (text) => {
	return text.replace(/[.*+?^${}()|[\]\\]/g, '\\$&');
};

// src/utils/result.ts
var result_exports = {};
__export(result_exports, {
	err: () => err,
	map: () => map,
	ok: () => ok,
	unwrap: () => unwrap,
	unwrapErr: () => unwrapErr,
});
var ok = (value) => ({
	isOk: true,
	isErr: false,
	value,
});
var err = (value) => ({
	isOk: false,
	isErr: true,
	value,
});
function map(result, fn) {
	if (result.isOk) {
		const val = fn(result.value);
		if (val instanceof Promise) {
			return val.then((newVal) => ok(newVal));
		} else {
			return ok(val);
		}
	}
	if (result.isErr) {
		const value = result.value;
		return err(value);
	}
	throw 'should never get here';
}
var unwrap = (result) => {
	if (result.isOk) {
		return result.value;
	} else {
		throw result.value;
	}
};
var unwrapErr = (result) => {
	if (result.isErr) {
		return result.value;
	} else {
		throw result.value;
	}
};
function createShadowRoot(cmpMeta) {
	const shadowRoot = this.attachShadow({ mode: 'open' });
	if (supportsConstructableStylesheets) {
		const sheet = new CSSStyleSheet();
		sheet.replaceSync(globalStyles);
		shadowRoot.adoptedStyleSheets.push(sheet);
	}
}
var createTime = (fnName, tagName = '') => {
	{
		return () => {
			return;
		};
	}
};
var uniqueTime = (key, measureText) => {
	{
		return () => {
			return;
		};
	}
};
var h = (nodeName, vnodeData, ...children) => {
	let child = null;
	let key = null;
	let simple = false;
	let lastSimple = false;
	const vNodeChildren = [];
	const walk = (c) => {
		for (let i2 = 0; i2 < c.length; i2++) {
			child = c[i2];
			if (Array.isArray(child)) {
				walk(child);
			} else if (child != null && typeof child !== 'boolean') {
				if ((simple = typeof nodeName !== 'function' && !isComplexType(child))) {
					child = String(child);
				}
				if (simple && lastSimple) {
					vNodeChildren[vNodeChildren.length - 1].$text$ += child;
				} else {
					vNodeChildren.push(simple ? newVNode(null, child) : child);
				}
				lastSimple = simple;
			}
		}
	};
	walk(children);
	if (vnodeData) {
		if (vnodeData.key) {
			key = vnodeData.key;
		}
		{
			const classData = vnodeData.className || vnodeData.class;
			if (classData) {
				vnodeData.class =
					typeof classData !== 'object'
						? classData
						: Object.keys(classData)
								.filter((k) => classData[k])
								.join(' ');
			}
		}
	}
	if (typeof nodeName === 'function') {
		return nodeName(vnodeData === null ? {} : vnodeData, vNodeChildren, vdomFnUtils);
	}
	const vnode = newVNode(nodeName, null);
	vnode.$attrs$ = vnodeData;
	if (vNodeChildren.length > 0) {
		vnode.$children$ = vNodeChildren;
	}
	{
		vnode.$key$ = key;
	}
	return vnode;
};
var newVNode = (tag, text) => {
	const vnode = {
		$flags$: 0,
		$tag$: tag,
		$text$: text,
		$elm$: null,
		$children$: null,
	};
	{
		vnode.$attrs$ = null;
	}
	{
		vnode.$key$ = null;
	}
	return vnode;
};
var Host = {};
var isHost = (node) => node && node.$tag$ === Host;
var vdomFnUtils = {
	forEach: (children, cb) => children.map(convertToPublic).forEach(cb),
	map: (children, cb) => children.map(convertToPublic).map(cb).map(convertToPrivate),
};
var convertToPublic = (node) => ({
	vattrs: node.$attrs$,
	vchildren: node.$children$,
	vkey: node.$key$,
	vname: node.$name$,
	vtag: node.$tag$,
	vtext: node.$text$,
});
var convertToPrivate = (node) => {
	if (typeof node.vtag === 'function') {
		const vnodeData = { ...node.vattrs };
		if (node.vkey) {
			vnodeData.key = node.vkey;
		}
		if (node.vname) {
			vnodeData.name = node.vname;
		}
		return h(node.vtag, vnodeData, ...(node.vchildren || []));
	}
	const vnode = newVNode(node.vtag, node.vtext);
	vnode.$attrs$ = node.vattrs;
	vnode.$children$ = node.vchildren;
	vnode.$key$ = node.vkey;
	vnode.$name$ = node.vname;
	return vnode;
};
var createSupportsRuleRe = (selector) => {
	const safeSelector2 = escapeRegExpSpecialCharacters(selector);
	return new RegExp(
		// First capture group: match any context before the selector that's not inside @supports selector()
		// Using negative lookahead to avoid matching inside @supports selector(...) condition
		`(^|[^@]|@(?!supports\\s+selector\\s*\\([^{]*?${safeSelector2}))(${safeSelector2}\\b)`,
		'g',
	);
};
createSupportsRuleRe('::slotted');
createSupportsRuleRe(':host');
createSupportsRuleRe(':host-context');
var parsePropertyValue = (propValue, propType) => {
	if (propValue != null && !isComplexType(propValue)) {
		if (propType & 4 /* Boolean */) {
			return propValue === 'false' ? false : propValue === '' || !!propValue;
		}
		if (propType & 2 /* Number */) {
			return typeof propValue === 'string' ? parseFloat(propValue) : typeof propValue === 'number' ? propValue : NaN;
		}
		if (propType & 1 /* String */) {
			return String(propValue);
		}
		return propValue;
	}
	return propValue;
};
var getElement = (ref) => getHostRef(ref).$hostElement$;

// src/runtime/event-emitter.ts
var createEvent = (ref, name, flags) => {
	const elm = getElement(ref);
	return {
		emit: (detail) => {
			return emitEvent(elm, name, {
				bubbles: true,
				composed: true,
				cancelable: true,
				detail,
			});
		},
	};
};
var emitEvent = (elm, name, opts) => {
	const ev = plt.ce(name, opts);
	elm.dispatchEvent(ev);
	return ev;
};
var rootAppliedStyles = /* @__PURE__ */ new WeakMap();
var registerStyle = (scopeId2, cssText, allowCS) => {
	let style = styles.get(scopeId2);
	if (supportsConstructableStylesheets && allowCS) {
		style = style || new CSSStyleSheet();
		if (typeof style === 'string') {
			style = cssText;
		} else {
			style.replaceSync(cssText);
		}
	} else {
		style = cssText;
	}
	styles.set(scopeId2, style);
};
var addStyle = (styleContainerNode, cmpMeta, mode) => {
	var _a;
	const scopeId2 = getScopeId(cmpMeta);
	const style = styles.get(scopeId2);
	if (!win.document) {
		return scopeId2;
	}
	styleContainerNode = styleContainerNode.nodeType === 11 /* DocumentFragment */ ? styleContainerNode : win.document;
	if (style) {
		if (typeof style === 'string') {
			styleContainerNode = styleContainerNode.head || styleContainerNode;
			let appliedStyles = rootAppliedStyles.get(styleContainerNode);
			let styleElm;
			if (!appliedStyles) {
				rootAppliedStyles.set(styleContainerNode, (appliedStyles = /* @__PURE__ */ new Set()));
			}
			if (!appliedStyles.has(scopeId2)) {
				{
					styleElm =
						document.querySelector(`[${HYDRATED_STYLE_ID}="${scopeId2}"]`) || win.document.createElement('style');
					styleElm.innerHTML = style;
					const nonce = (_a = plt.$nonce$) != null ? _a : queryNonceMetaTagContent(win.document);
					if (nonce != null) {
						styleElm.setAttribute('nonce', nonce);
					}
					if (!((cmpMeta.$flags$ & 1) /* shadowDomEncapsulation */)) {
						if (styleContainerNode.nodeName === 'HEAD') {
							const preconnectLinks = styleContainerNode.querySelectorAll('link[rel=preconnect]');
							const referenceNode2 =
								preconnectLinks.length > 0
									? preconnectLinks[preconnectLinks.length - 1].nextSibling
									: styleContainerNode.querySelector('style');
							styleContainerNode.insertBefore(
								styleElm,
								(referenceNode2 == null ? void 0 : referenceNode2.parentNode) === styleContainerNode
									? referenceNode2
									: null,
							);
						} else if ('host' in styleContainerNode) {
							if (supportsConstructableStylesheets) {
								const stylesheet = new CSSStyleSheet();
								stylesheet.replaceSync(style);
								styleContainerNode.adoptedStyleSheets = [stylesheet, ...styleContainerNode.adoptedStyleSheets];
							} else {
								const existingStyleContainer = styleContainerNode.querySelector('style');
								if (existingStyleContainer) {
									existingStyleContainer.innerHTML = style + existingStyleContainer.innerHTML;
								} else {
									styleContainerNode.prepend(styleElm);
								}
							}
						} else {
							styleContainerNode.append(styleElm);
						}
					}
					if (cmpMeta.$flags$ & 1 /* shadowDomEncapsulation */) {
						styleContainerNode.insertBefore(styleElm, null);
					}
				}
				if (cmpMeta.$flags$ & 4 /* hasSlotRelocation */) {
					styleElm.innerHTML += SLOT_FB_CSS;
				}
				if (appliedStyles) {
					appliedStyles.add(scopeId2);
				}
			}
		} else if (!styleContainerNode.adoptedStyleSheets.includes(style)) {
			styleContainerNode.adoptedStyleSheets = [...styleContainerNode.adoptedStyleSheets, style];
		}
	}
	return scopeId2;
};
var attachStyles = (hostRef) => {
	const cmpMeta = hostRef.$cmpMeta$;
	const elm = hostRef.$hostElement$;
	const flags = cmpMeta.$flags$;
	const endAttachStyles = createTime('attachStyles', cmpMeta.$tagName$);
	const scopeId2 = addStyle(elm.shadowRoot ? elm.shadowRoot : elm.getRootNode(), cmpMeta);
	if (flags & 10 /* needsScopedEncapsulation */) {
		elm['s-sc'] = scopeId2;
		elm.classList.add(scopeId2 + '-h');
	}
	endAttachStyles();
};
var getScopeId = (cmp, mode) => 'sc-' + cmp.$tagName$;
var setAccessor = (elm, memberName, oldValue, newValue, isSvg, flags, initialRender) => {
	if (oldValue === newValue) {
		return;
	}
	let isProp = isMemberInElement(elm, memberName);
	let ln = memberName.toLowerCase();
	if (memberName === 'class') {
		const classList = elm.classList;
		const oldClasses = parseClassList(oldValue);
		let newClasses = parseClassList(newValue);
		{
			classList.remove(...oldClasses.filter((c) => c && !newClasses.includes(c)));
			classList.add(...newClasses.filter((c) => c && !oldClasses.includes(c)));
		}
	} else if (memberName === 'style') {
		{
			for (const prop in oldValue) {
				if (!newValue || newValue[prop] == null) {
					if (prop.includes('-')) {
						elm.style.removeProperty(prop);
					} else {
						elm.style[prop] = '';
					}
				}
			}
		}
		for (const prop in newValue) {
			if (!oldValue || newValue[prop] !== oldValue[prop]) {
				if (prop.includes('-')) {
					elm.style.setProperty(prop, newValue[prop]);
				} else {
					elm.style[prop] = newValue[prop];
				}
			}
		}
	} else if (memberName === 'key');
	else if (memberName === 'ref') {
		if (newValue) {
			newValue(elm);
		}
	} else if (!isProp && memberName[0] === 'o' && memberName[1] === 'n') {
		if (memberName[2] === '-') {
			memberName = memberName.slice(3);
		} else if (isMemberInElement(win, ln)) {
			memberName = ln.slice(2);
		} else {
			memberName = ln[2] + memberName.slice(3);
		}
		if (oldValue || newValue) {
			const capture = memberName.endsWith(CAPTURE_EVENT_SUFFIX);
			memberName = memberName.replace(CAPTURE_EVENT_REGEX, '');
			if (oldValue) {
				plt.rel(elm, memberName, oldValue, capture);
			}
			if (newValue) {
				plt.ael(elm, memberName, newValue, capture);
			}
		}
	} else {
		const isComplex = isComplexType(newValue);
		if ((isProp || (isComplex && newValue !== null)) && !isSvg) {
			try {
				if (!elm.tagName.includes('-')) {
					const n = newValue == null ? '' : newValue;
					if (memberName === 'list') {
						isProp = false;
					} else if (oldValue == null || elm[memberName] != n) {
						if (typeof elm.__lookupSetter__(memberName) === 'function') {
							elm[memberName] = n;
						} else {
							elm.setAttribute(memberName, n);
						}
					}
				} else if (elm[memberName] !== newValue) {
					elm[memberName] = newValue;
				}
			} catch (e) {}
		}
		let xlink = false;
		{
			if (ln !== (ln = ln.replace(/^xlink\:?/, ''))) {
				memberName = ln;
				xlink = true;
			}
		}
		if (newValue == null || newValue === false) {
			if (newValue !== false || elm.getAttribute(memberName) === '') {
				if (xlink) {
					elm.removeAttributeNS(XLINK_NS, memberName);
				} else {
					elm.removeAttribute(memberName);
				}
			}
		} else if ((!isProp || flags & 4 /* isHost */ || isSvg) && !isComplex && elm.nodeType === 1 /* ElementNode */) {
			newValue = newValue === true ? '' : newValue;
			if (xlink) {
				elm.setAttributeNS(XLINK_NS, memberName, newValue);
			} else {
				elm.setAttribute(memberName, newValue);
			}
		}
	}
};
var parseClassListRegex = /\s/;
var parseClassList = (value) => {
	if (typeof value === 'object' && value && 'baseVal' in value) {
		value = value.baseVal;
	}
	if (!value || typeof value !== 'string') {
		return [];
	}
	return value.split(parseClassListRegex);
};
var CAPTURE_EVENT_SUFFIX = 'Capture';
var CAPTURE_EVENT_REGEX = new RegExp(CAPTURE_EVENT_SUFFIX + '$');

// src/runtime/vdom/update-element.ts
var updateElement = (oldVnode, newVnode, isSvgMode2, isInitialRender) => {
	const elm =
		newVnode.$elm$.nodeType === 11 /* DocumentFragment */ && newVnode.$elm$.host ? newVnode.$elm$.host : newVnode.$elm$;
	const oldVnodeAttrs = (oldVnode && oldVnode.$attrs$) || {};
	const newVnodeAttrs = newVnode.$attrs$ || {};
	{
		for (const memberName of sortedAttrNames(Object.keys(oldVnodeAttrs))) {
			if (!(memberName in newVnodeAttrs)) {
				setAccessor(elm, memberName, oldVnodeAttrs[memberName], void 0, isSvgMode2, newVnode.$flags$);
			}
		}
	}
	for (const memberName of sortedAttrNames(Object.keys(newVnodeAttrs))) {
		setAccessor(elm, memberName, oldVnodeAttrs[memberName], newVnodeAttrs[memberName], isSvgMode2, newVnode.$flags$);
	}
};
function sortedAttrNames(attrNames) {
	return attrNames.includes('ref')
		? // we need to sort these to ensure that `'ref'` is the last attr
			[...attrNames.filter((attr) => attr !== 'ref'), 'ref']
		: // no need to sort, return the original array
			attrNames;
}
var hostTagName;
var isSvgMode = false;
var createElm = (oldParentVNode, newParentVNode, childIndex) => {
	const newVNode2 = newParentVNode.$children$[childIndex];
	let i2 = 0;
	let elm;
	let childNode;
	if (newVNode2.$text$ !== null) {
		elm = newVNode2.$elm$ = win.document.createTextNode(newVNode2.$text$);
	} else {
		if (!isSvgMode) {
			isSvgMode = newVNode2.$tag$ === 'svg';
		}
		if (!win.document) {
			throw new Error(
				"You are trying to render a Stencil component in an environment that doesn't support the DOM. Make sure to populate the [`window`](https://developer.mozilla.org/en-US/docs/Web/API/Window/window) object before rendering a component.",
			);
		}
		elm = newVNode2.$elm$ = win.document.createElementNS(isSvgMode ? SVG_NS : HTML_NS, newVNode2.$tag$);
		if (isSvgMode && newVNode2.$tag$ === 'foreignObject') {
			isSvgMode = false;
		}
		{
			updateElement(null, newVNode2, isSvgMode);
		}
		if (newVNode2.$children$) {
			for (i2 = 0; i2 < newVNode2.$children$.length; ++i2) {
				childNode = createElm(oldParentVNode, newVNode2, i2);
				if (childNode) {
					elm.appendChild(childNode);
				}
			}
		}
		{
			if (newVNode2.$tag$ === 'svg') {
				isSvgMode = false;
			} else if (elm.tagName === 'foreignObject') {
				isSvgMode = true;
			}
		}
	}
	elm['s-hn'] = hostTagName;
	return elm;
};
var addVnodes = (parentElm, before, parentVNode, vnodes, startIdx, endIdx) => {
	let containerElm = parentElm;
	let childNode;
	if (containerElm.shadowRoot && containerElm.tagName === hostTagName) {
		containerElm = containerElm.shadowRoot;
	}
	for (; startIdx <= endIdx; ++startIdx) {
		if (vnodes[startIdx]) {
			childNode = createElm(null, parentVNode, startIdx);
			if (childNode) {
				vnodes[startIdx].$elm$ = childNode;
				insertBefore(containerElm, childNode, before);
			}
		}
	}
};
var removeVnodes = (vnodes, startIdx, endIdx) => {
	for (let index = startIdx; index <= endIdx; ++index) {
		const vnode = vnodes[index];
		if (vnode) {
			const elm = vnode.$elm$;
			nullifyVNodeRefs(vnode);
			if (elm) {
				elm.remove();
			}
		}
	}
};
var updateChildren = (parentElm, oldCh, newVNode2, newCh, isInitialRender = false) => {
	let oldStartIdx = 0;
	let newStartIdx = 0;
	let idxInOld = 0;
	let i2 = 0;
	let oldEndIdx = oldCh.length - 1;
	let oldStartVnode = oldCh[0];
	let oldEndVnode = oldCh[oldEndIdx];
	let newEndIdx = newCh.length - 1;
	let newStartVnode = newCh[0];
	let newEndVnode = newCh[newEndIdx];
	let node;
	let elmToMove;
	while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {
		if (oldStartVnode == null) {
			oldStartVnode = oldCh[++oldStartIdx];
		} else if (oldEndVnode == null) {
			oldEndVnode = oldCh[--oldEndIdx];
		} else if (newStartVnode == null) {
			newStartVnode = newCh[++newStartIdx];
		} else if (newEndVnode == null) {
			newEndVnode = newCh[--newEndIdx];
		} else if (isSameVnode(oldStartVnode, newStartVnode, isInitialRender)) {
			patch(oldStartVnode, newStartVnode, isInitialRender);
			oldStartVnode = oldCh[++oldStartIdx];
			newStartVnode = newCh[++newStartIdx];
		} else if (isSameVnode(oldEndVnode, newEndVnode, isInitialRender)) {
			patch(oldEndVnode, newEndVnode, isInitialRender);
			oldEndVnode = oldCh[--oldEndIdx];
			newEndVnode = newCh[--newEndIdx];
		} else if (isSameVnode(oldStartVnode, newEndVnode, isInitialRender)) {
			patch(oldStartVnode, newEndVnode, isInitialRender);
			insertBefore(parentElm, oldStartVnode.$elm$, oldEndVnode.$elm$.nextSibling);
			oldStartVnode = oldCh[++oldStartIdx];
			newEndVnode = newCh[--newEndIdx];
		} else if (isSameVnode(oldEndVnode, newStartVnode, isInitialRender)) {
			patch(oldEndVnode, newStartVnode, isInitialRender);
			insertBefore(parentElm, oldEndVnode.$elm$, oldStartVnode.$elm$);
			oldEndVnode = oldCh[--oldEndIdx];
			newStartVnode = newCh[++newStartIdx];
		} else {
			idxInOld = -1;
			{
				for (i2 = oldStartIdx; i2 <= oldEndIdx; ++i2) {
					if (oldCh[i2] && oldCh[i2].$key$ !== null && oldCh[i2].$key$ === newStartVnode.$key$) {
						idxInOld = i2;
						break;
					}
				}
			}
			if (idxInOld >= 0) {
				elmToMove = oldCh[idxInOld];
				if (elmToMove.$tag$ !== newStartVnode.$tag$) {
					node = createElm(oldCh && oldCh[newStartIdx], newVNode2, idxInOld);
				} else {
					patch(elmToMove, newStartVnode, isInitialRender);
					oldCh[idxInOld] = void 0;
					node = elmToMove.$elm$;
				}
				newStartVnode = newCh[++newStartIdx];
			} else {
				node = createElm(oldCh && oldCh[newStartIdx], newVNode2, newStartIdx);
				newStartVnode = newCh[++newStartIdx];
			}
			if (node) {
				{
					insertBefore(oldStartVnode.$elm$.parentNode, node, oldStartVnode.$elm$);
				}
			}
		}
	}
	if (oldStartIdx > oldEndIdx) {
		addVnodes(
			parentElm,
			newCh[newEndIdx + 1] == null ? null : newCh[newEndIdx + 1].$elm$,
			newVNode2,
			newCh,
			newStartIdx,
			newEndIdx,
		);
	} else if (newStartIdx > newEndIdx) {
		removeVnodes(oldCh, oldStartIdx, oldEndIdx);
	}
};
var isSameVnode = (leftVNode, rightVNode, isInitialRender = false) => {
	if (leftVNode.$tag$ === rightVNode.$tag$) {
		if (!isInitialRender) {
			return leftVNode.$key$ === rightVNode.$key$;
		}
		if (isInitialRender && !leftVNode.$key$ && rightVNode.$key$) {
			leftVNode.$key$ = rightVNode.$key$;
		}
		return true;
	}
	return false;
};
var patch = (oldVNode, newVNode2, isInitialRender = false) => {
	const elm = (newVNode2.$elm$ = oldVNode.$elm$);
	const oldChildren = oldVNode.$children$;
	const newChildren = newVNode2.$children$;
	const tag = newVNode2.$tag$;
	const text = newVNode2.$text$;
	if (text === null) {
		{
			isSvgMode = tag === 'svg' ? true : tag === 'foreignObject' ? false : isSvgMode;
		}
		{
			updateElement(oldVNode, newVNode2, isSvgMode);
		}
		if (oldChildren !== null && newChildren !== null) {
			updateChildren(elm, oldChildren, newVNode2, newChildren, isInitialRender);
		} else if (newChildren !== null) {
			if (oldVNode.$text$ !== null) {
				elm.textContent = '';
			}
			addVnodes(elm, null, newVNode2, newChildren, 0, newChildren.length - 1);
		} else if (
			// don't do this on initial render as it can cause non-hydrated content to be removed
			!isInitialRender &&
			BUILD.updatable &&
			oldChildren !== null
		) {
			removeVnodes(oldChildren, 0, oldChildren.length - 1);
		}
		if (isSvgMode && tag === 'svg') {
			isSvgMode = false;
		}
	} else if (oldVNode.$text$ !== text) {
		elm.data = text;
	}
};
var nullifyVNodeRefs = (vNode) => {
	{
		vNode.$attrs$ && vNode.$attrs$.ref && vNode.$attrs$.ref(null);
		vNode.$children$ && vNode.$children$.map(nullifyVNodeRefs);
	}
};
var insertBefore = (parent, newNode, reference) => {
	{
		return parent == null ? void 0 : parent.insertBefore(newNode, reference);
	}
};
var renderVdom = (hostRef, renderFnResults, isInitialLoad = false) => {
	const hostElm = hostRef.$hostElement$;
	const oldVNode = hostRef.$vnode$ || newVNode(null, null);
	const isHostElement = isHost(renderFnResults);
	const rootVnode = isHostElement ? renderFnResults : h(null, null, renderFnResults);
	hostTagName = hostElm.tagName;
	if (isInitialLoad && rootVnode.$attrs$) {
		for (const key of Object.keys(rootVnode.$attrs$)) {
			if (hostElm.hasAttribute(key) && !['key', 'ref', 'style', 'class'].includes(key)) {
				rootVnode.$attrs$[key] = hostElm[key];
			}
		}
	}
	rootVnode.$tag$ = null;
	rootVnode.$flags$ |= 4 /* isHost */;
	hostRef.$vnode$ = rootVnode;
	rootVnode.$elm$ = oldVNode.$elm$ = hostElm.shadowRoot || hostElm;
	patch(oldVNode, rootVnode, isInitialLoad);
};

// src/runtime/update-component.ts
var attachToAncestor = (hostRef, ancestorComponent) => {
	if (ancestorComponent && !hostRef.$onRenderResolve$ && ancestorComponent['s-p']) {
		const index = ancestorComponent['s-p'].push(
			new Promise(
				(r) =>
					(hostRef.$onRenderResolve$ = () => {
						ancestorComponent['s-p'].splice(index - 1, 1);
						r();
					}),
			),
		);
	}
};
var scheduleUpdate = (hostRef, isInitialLoad) => {
	{
		hostRef.$flags$ |= 16 /* isQueuedForUpdate */;
	}
	if (hostRef.$flags$ & 4 /* isWaitingForChildren */) {
		hostRef.$flags$ |= 512 /* needsRerender */;
		return;
	}
	attachToAncestor(hostRef, hostRef.$ancestorComponent$);
	const dispatch = () => dispatchHooks(hostRef, isInitialLoad);
	return writeTask(dispatch);
};
var dispatchHooks = (hostRef, isInitialLoad) => {
	const elm = hostRef.$hostElement$;
	const endSchedule = createTime('scheduleUpdate', hostRef.$cmpMeta$.$tagName$);
	const instance = hostRef.$lazyInstance$;
	if (!instance) {
		throw new Error(
			`Can't render component <${elm.tagName.toLowerCase()} /> with invalid Stencil runtime! Make sure this imported component is compiled with a \`externalRuntime: true\` flag. For more information, please refer to https://stenciljs.com/docs/custom-elements#externalruntime`,
		);
	}
	let maybePromise;
	if (isInitialLoad) {
		{
			hostRef.$flags$ |= 256 /* isListenReady */;
			if (hostRef.$queuedListeners$) {
				hostRef.$queuedListeners$.map(([methodName, event]) => safeCall(instance, methodName, event, elm));
				hostRef.$queuedListeners$ = void 0;
			}
		}
		maybePromise = safeCall(instance, 'componentWillLoad', void 0, elm);
	} else {
		maybePromise = safeCall(instance, 'componentWillUpdate', void 0, elm);
	}
	maybePromise = enqueue(maybePromise, () => safeCall(instance, 'componentWillRender', void 0, elm));
	endSchedule();
	return enqueue(maybePromise, () => updateComponent(hostRef, instance, isInitialLoad));
};
var enqueue = (maybePromise, fn) =>
	isPromisey(maybePromise)
		? maybePromise.then(fn).catch((err2) => {
				console.error(err2);
				fn();
			})
		: fn();
var isPromisey = (maybePromise) =>
	maybePromise instanceof Promise || (maybePromise && maybePromise.then && typeof maybePromise.then === 'function');
var updateComponent = async (hostRef, instance, isInitialLoad) => {
	var _a;
	const elm = hostRef.$hostElement$;
	const endUpdate = createTime('update', hostRef.$cmpMeta$.$tagName$);
	const rc = elm['s-rc'];
	if (isInitialLoad) {
		attachStyles(hostRef);
	}
	const endRender = createTime('render', hostRef.$cmpMeta$.$tagName$);
	{
		callRender(hostRef, instance, elm, isInitialLoad);
	}
	if (rc) {
		rc.map((cb) => cb());
		elm['s-rc'] = void 0;
	}
	endRender();
	endUpdate();
	{
		const childrenPromises = (_a = elm['s-p']) != null ? _a : [];
		const postUpdate = () => postUpdateComponent(hostRef);
		if (childrenPromises.length === 0) {
			postUpdate();
		} else {
			Promise.all(childrenPromises).then(postUpdate);
			hostRef.$flags$ |= 4 /* isWaitingForChildren */;
			childrenPromises.length = 0;
		}
	}
};
var callRender = (hostRef, instance, elm, isInitialLoad) => {
	try {
		instance = instance.render();
		{
			hostRef.$flags$ &= -17 /* isQueuedForUpdate */;
		}
		{
			hostRef.$flags$ |= 2 /* hasRendered */;
		}
		{
			{
				{
					renderVdom(hostRef, instance, isInitialLoad);
				}
			}
		}
	} catch (e) {
		consoleError(e, hostRef.$hostElement$);
	}
	return null;
};
var postUpdateComponent = (hostRef) => {
	const tagName = hostRef.$cmpMeta$.$tagName$;
	const elm = hostRef.$hostElement$;
	const endPostUpdate = createTime('postUpdate', tagName);
	const instance = hostRef.$lazyInstance$;
	const ancestorComponent = hostRef.$ancestorComponent$;
	safeCall(instance, 'componentDidRender', void 0, elm);
	if (!((hostRef.$flags$ & 64) /* hasLoadedComponent */)) {
		hostRef.$flags$ |= 64 /* hasLoadedComponent */;
		{
			addHydratedFlag(elm);
		}
		safeCall(instance, 'componentDidLoad', void 0, elm);
		endPostUpdate();
		{
			hostRef.$onReadyResolve$(elm);
			if (!ancestorComponent) {
				appDidLoad();
			}
		}
	} else {
		safeCall(instance, 'componentDidUpdate', void 0, elm);
		endPostUpdate();
	}
	{
		hostRef.$onInstanceResolve$(elm);
	}
	{
		if (hostRef.$onRenderResolve$) {
			hostRef.$onRenderResolve$();
			hostRef.$onRenderResolve$ = void 0;
		}
		if (hostRef.$flags$ & 512 /* needsRerender */) {
			nextTick(() => scheduleUpdate(hostRef, false));
		}
		hostRef.$flags$ &= -517;
	}
};
var appDidLoad = (who) => {
	nextTick(() => emitEvent(win, 'appload', { detail: { namespace: NAMESPACE } }));
};
var safeCall = (instance, method, arg, elm) => {
	if (instance && instance[method]) {
		try {
			return instance[method](arg);
		} catch (e) {
			consoleError(e, elm);
		}
	}
	return void 0;
};
var addHydratedFlag = (elm) => {
	var _a;
	return elm.classList.add((_a = BUILD.hydratedSelectorName) != null ? _a : 'hydrated');
};

// src/runtime/set-value.ts
var getValue = (ref, propName) => getHostRef(ref).$instanceValues$.get(propName);
var setValue = (ref, propName, newVal, cmpMeta) => {
	const hostRef = getHostRef(ref);
	if (!hostRef) {
		throw new Error(
			`Couldn't find host element for "${cmpMeta.$tagName$}" as it is unknown to this Stencil runtime. This usually happens when integrating a 3rd party Stencil component with another Stencil component or application. Please reach out to the maintainers of the 3rd party Stencil component or report this on the Stencil Discord server (https://chat.stenciljs.com) or comment on this similar [GitHub issue](https://github.com/stenciljs/core/issues/5457).`,
		);
	}
	const elm = hostRef.$hostElement$;
	const oldVal = hostRef.$instanceValues$.get(propName);
	const flags = hostRef.$flags$;
	const instance = hostRef.$lazyInstance$;
	newVal = parsePropertyValue(newVal, cmpMeta.$members$[propName][0]);
	const areBothNaN = Number.isNaN(oldVal) && Number.isNaN(newVal);
	const didValueChange = newVal !== oldVal && !areBothNaN;
	if ((!((flags & 8) /* isConstructingInstance */) || oldVal === void 0) && didValueChange) {
		hostRef.$instanceValues$.set(propName, newVal);
		if (instance) {
			if (cmpMeta.$watchers$ && flags & 128 /* isWatchReady */) {
				const watchMethods = cmpMeta.$watchers$[propName];
				if (watchMethods) {
					watchMethods.map((watchMethodName) => {
						try {
							instance[watchMethodName](newVal, oldVal, propName);
						} catch (e) {
							consoleError(e, elm);
						}
					});
				}
			}
			if ((flags & (2 /* hasRendered */ | 16) /* isQueuedForUpdate */) === 2 /* hasRendered */) {
				if (instance.componentShouldUpdate) {
					if (instance.componentShouldUpdate(newVal, oldVal, propName) === false) {
						return;
					}
				}
				scheduleUpdate(hostRef, false);
			}
		}
	}
};

// src/runtime/proxy-component.ts
var proxyComponent = (Cstr, cmpMeta, flags) => {
	var _a, _b;
	const prototype = Cstr.prototype;
	if (cmpMeta.$flags$ & 64 /* formAssociated */ && flags & 1 /* isElementConstructor */) {
		FORM_ASSOCIATED_CUSTOM_ELEMENT_CALLBACKS.forEach((cbName) => {
			Object.defineProperty(prototype, cbName, {
				value(...args) {
					const hostRef = getHostRef(this);
					const instance = hostRef.$lazyInstance$;
					if (!instance) {
						hostRef.$onReadyPromise$.then((asyncInstance) => {
							const cb = asyncInstance[cbName];
							typeof cb === 'function' && cb.call(asyncInstance, ...args);
						});
					} else {
						const cb = instance[cbName];
						typeof cb === 'function' && cb.call(instance, ...args);
					}
				},
			});
		});
	}
	if (cmpMeta.$members$ || cmpMeta.$watchers$ || Cstr.watchers) {
		if (Cstr.watchers && !cmpMeta.$watchers$) {
			cmpMeta.$watchers$ = Cstr.watchers;
		}
		const members = Object.entries((_a = cmpMeta.$members$) != null ? _a : {});
		members.map(([memberName, [memberFlags]]) => {
			if (memberFlags & 31 /* Prop */ || (flags & 2 /* proxyState */ && memberFlags & 32) /* State */) {
				const { get: origGetter, set: origSetter } = Object.getOwnPropertyDescriptor(prototype, memberName) || {};
				if (origGetter) cmpMeta.$members$[memberName][0] |= 2048 /* Getter */;
				if (origSetter) cmpMeta.$members$[memberName][0] |= 4096 /* Setter */;
				if (flags & 1 /* isElementConstructor */ || !origGetter) {
					Object.defineProperty(prototype, memberName, {
						get() {
							{
								if ((cmpMeta.$members$[memberName][0] & 2048) /* Getter */ === 0) {
									return getValue(this, memberName);
								}
								const ref = getHostRef(this);
								const instance = ref ? ref.$lazyInstance$ : prototype;
								if (!instance) return;
								return instance[memberName];
							}
						},
						configurable: true,
						enumerable: true,
					});
				}
				Object.defineProperty(prototype, memberName, {
					set(newValue) {
						const ref = getHostRef(this);
						if (origSetter) {
							const currentValue = memberFlags & 32 /* State */ ? this[memberName] : ref.$hostElement$[memberName];
							if (typeof currentValue === 'undefined' && ref.$instanceValues$.get(memberName)) {
								newValue = ref.$instanceValues$.get(memberName);
							} else if (!ref.$instanceValues$.get(memberName) && currentValue) {
								ref.$instanceValues$.set(memberName, currentValue);
							}
							origSetter.apply(this, [parsePropertyValue(newValue, memberFlags)]);
							newValue = memberFlags & 32 /* State */ ? this[memberName] : ref.$hostElement$[memberName];
							setValue(this, memberName, newValue, cmpMeta);
							return;
						}
						{
							if (
								(flags & 1) /* isElementConstructor */ === 0 ||
								(cmpMeta.$members$[memberName][0] & 4096) /* Setter */ === 0
							) {
								setValue(this, memberName, newValue, cmpMeta);
								if (flags & 1 /* isElementConstructor */ && !ref.$lazyInstance$) {
									ref.$onReadyPromise$.then(() => {
										if (
											cmpMeta.$members$[memberName][0] & 4096 /* Setter */ &&
											ref.$lazyInstance$[memberName] !== ref.$instanceValues$.get(memberName)
										) {
											ref.$lazyInstance$[memberName] = newValue;
										}
									});
								}
								return;
							}
							const setterSetVal = () => {
								const currentValue = ref.$lazyInstance$[memberName];
								if (!ref.$instanceValues$.get(memberName) && currentValue) {
									ref.$instanceValues$.set(memberName, currentValue);
								}
								ref.$lazyInstance$[memberName] = parsePropertyValue(newValue, memberFlags);
								setValue(this, memberName, ref.$lazyInstance$[memberName], cmpMeta);
							};
							if (ref.$lazyInstance$) {
								setterSetVal();
							} else {
								ref.$onReadyPromise$.then(() => setterSetVal());
							}
						}
					},
				});
			} else if (flags & 1 /* isElementConstructor */ && memberFlags & 64 /* Method */) {
				Object.defineProperty(prototype, memberName, {
					value(...args) {
						var _a2;
						const ref = getHostRef(this);
						return (_a2 = ref == null ? void 0 : ref.$onInstancePromise$) == null
							? void 0
							: _a2.then(() => {
									var _a3;
									return (_a3 = ref.$lazyInstance$) == null ? void 0 : _a3[memberName](...args);
								});
					},
				});
			}
		});
		if (flags & 1 /* isElementConstructor */) {
			const attrNameToPropName = /* @__PURE__ */ new Map();
			prototype.attributeChangedCallback = function (attrName, oldValue, newValue) {
				plt.jmp(() => {
					var _a2;
					const propName = attrNameToPropName.get(attrName);
					if (this.hasOwnProperty(propName) && BUILD.lazyLoad) {
						newValue = this[propName];
						delete this[propName];
					} else if (
						prototype.hasOwnProperty(propName) &&
						typeof this[propName] === 'number' && // cast type to number to avoid TS compiler issues
						this[propName] == newValue
					) {
						return;
					} else if (propName == null) {
						const hostRef = getHostRef(this);
						const flags2 = hostRef == null ? void 0 : hostRef.$flags$;
						if (
							flags2 &&
							!((flags2 & 8) /* isConstructingInstance */) &&
							flags2 & 128 /* isWatchReady */ &&
							newValue !== oldValue
						) {
							const instance = hostRef.$lazyInstance$;
							const entry = (_a2 = cmpMeta.$watchers$) == null ? void 0 : _a2[attrName];
							entry == null
								? void 0
								: entry.forEach((callbackName) => {
										if (instance[callbackName] != null) {
											instance[callbackName].call(instance, newValue, oldValue, attrName);
										}
									});
						}
						return;
					}
					const propDesc = Object.getOwnPropertyDescriptor(prototype, propName);
					newValue = newValue === null && typeof this[propName] === 'boolean' ? false : newValue;
					if (newValue !== this[propName] && (!propDesc.get || !!propDesc.set)) {
						this[propName] = newValue;
					}
				});
			};
			Cstr.observedAttributes = Array.from(
				/* @__PURE__ */ new Set([
					...Object.keys((_b = cmpMeta.$watchers$) != null ? _b : {}),
					...members
						.filter(([_, m]) => m[0] & 15 /* HasAttribute */)
						.map(([propName, m]) => {
							const attrName = m[1] || propName;
							attrNameToPropName.set(attrName, propName);
							return attrName;
						}),
				]),
			);
		}
	}
	return Cstr;
};

// src/runtime/initialize-component.ts
var initializeComponent = async (elm, hostRef, cmpMeta, hmrVersionId) => {
	let Cstr;
	if ((hostRef.$flags$ & 32) /* hasInitializedComponent */ === 0) {
		hostRef.$flags$ |= 32 /* hasInitializedComponent */;
		const bundleId = cmpMeta.$lazyBundleId$;
		if (bundleId) {
			const CstrImport = loadModule(cmpMeta, hostRef);
			if (CstrImport && 'then' in CstrImport) {
				const endLoad = uniqueTime();
				Cstr = await CstrImport;
				endLoad();
			} else {
				Cstr = CstrImport;
			}
			if (!Cstr) {
				throw new Error(`Constructor for "${cmpMeta.$tagName$}#${hostRef.$modeName$}" was not found`);
			}
			if (!Cstr.isProxied) {
				{
					cmpMeta.$watchers$ = Cstr.watchers;
				}
				proxyComponent(Cstr, cmpMeta, 2 /* proxyState */);
				Cstr.isProxied = true;
			}
			const endNewInstance = createTime('createInstance', cmpMeta.$tagName$);
			{
				hostRef.$flags$ |= 8 /* isConstructingInstance */;
			}
			try {
				new Cstr(hostRef);
			} catch (e) {
				consoleError(e, elm);
			}
			{
				hostRef.$flags$ &= -9 /* isConstructingInstance */;
			}
			{
				hostRef.$flags$ |= 128 /* isWatchReady */;
			}
			endNewInstance();
			fireConnectedCallback(hostRef.$lazyInstance$, elm);
		} else {
			Cstr = elm.constructor;
			const cmpTag = elm.localName;
			customElements.whenDefined(cmpTag).then(() => (hostRef.$flags$ |= 128) /* isWatchReady */);
		}
		if (Cstr && Cstr.style) {
			let style;
			if (typeof Cstr.style === 'string') {
				style = Cstr.style;
			}
			const scopeId2 = getScopeId(cmpMeta);
			if (!styles.has(scopeId2)) {
				const endRegisterStyles = createTime('registerStyles', cmpMeta.$tagName$);
				registerStyle(scopeId2, style, !!((cmpMeta.$flags$ & 1) /* shadowDomEncapsulation */));
				endRegisterStyles();
			}
		}
	}
	const ancestorComponent = hostRef.$ancestorComponent$;
	const schedule = () => scheduleUpdate(hostRef, true);
	if (ancestorComponent && ancestorComponent['s-rc']) {
		ancestorComponent['s-rc'].push(schedule);
	} else {
		schedule();
	}
};
var fireConnectedCallback = (instance, elm) => {
	{
		safeCall(instance, 'connectedCallback', void 0, elm);
	}
};

// src/runtime/connected-callback.ts
var connectedCallback = (elm) => {
	if ((plt.$flags$ & 1) /* isTmpDisconnected */ === 0) {
		const hostRef = getHostRef(elm);
		const cmpMeta = hostRef.$cmpMeta$;
		const endConnected = createTime('connectedCallback', cmpMeta.$tagName$);
		if (!((hostRef.$flags$ & 1) /* hasConnected */)) {
			hostRef.$flags$ |= 1 /* hasConnected */;
			{
				let ancestorComponent = elm;
				while ((ancestorComponent = ancestorComponent.parentNode || ancestorComponent.host)) {
					if (ancestorComponent['s-p']) {
						attachToAncestor(hostRef, (hostRef.$ancestorComponent$ = ancestorComponent));
						break;
					}
				}
			}
			if (cmpMeta.$members$) {
				Object.entries(cmpMeta.$members$).map(([memberName, [memberFlags]]) => {
					if (memberFlags & 31 /* Prop */ && elm.hasOwnProperty(memberName)) {
						const value = elm[memberName];
						delete elm[memberName];
						elm[memberName] = value;
					}
				});
			}
			{
				initializeComponent(elm, hostRef, cmpMeta);
			}
		} else {
			addHostEventListeners(elm, hostRef, cmpMeta.$listeners$);
			if (hostRef == null ? void 0 : hostRef.$lazyInstance$) {
				fireConnectedCallback(hostRef.$lazyInstance$, elm);
			} else if (hostRef == null ? void 0 : hostRef.$onReadyPromise$) {
				hostRef.$onReadyPromise$.then(() => fireConnectedCallback(hostRef.$lazyInstance$, elm));
			}
		}
		endConnected();
	}
};
var disconnectInstance = (instance, elm) => {
	{
		safeCall(instance, 'disconnectedCallback', void 0, elm || instance);
	}
};
var disconnectedCallback = async (elm) => {
	if ((plt.$flags$ & 1) /* isTmpDisconnected */ === 0) {
		const hostRef = getHostRef(elm);
		{
			if (hostRef.$rmListeners$) {
				hostRef.$rmListeners$.map((rmListener) => rmListener());
				hostRef.$rmListeners$ = void 0;
			}
		}
		if (hostRef == null ? void 0 : hostRef.$lazyInstance$) {
			disconnectInstance(hostRef.$lazyInstance$, elm);
		} else if (hostRef == null ? void 0 : hostRef.$onReadyPromise$) {
			hostRef.$onReadyPromise$.then(() => disconnectInstance(hostRef.$lazyInstance$, elm));
		}
	}
	if (rootAppliedStyles.has(elm)) {
		rootAppliedStyles.delete(elm);
	}
	if (elm.shadowRoot && rootAppliedStyles.has(elm.shadowRoot)) {
		rootAppliedStyles.delete(elm.shadowRoot);
	}
};

// src/runtime/bootstrap-lazy.ts
var bootstrapLazy = (lazyBundles, options = {}) => {
	var _a;
	if (!win.document) {
		console.warn('Stencil: No document found. Skipping bootstrapping lazy components.');
		return;
	}
	const endBootstrap = createTime();
	const cmpTags = [];
	const exclude = options.exclude || [];
	const customElements2 = win.customElements;
	const head = win.document.head;
	const metaCharset = /* @__PURE__ */ head.querySelector('meta[charset]');
	const dataStyles = /* @__PURE__ */ win.document.createElement('style');
	const deferredConnectedCallbacks = [];
	let appLoadFallback;
	let isBootstrapping = true;
	Object.assign(plt, options);
	plt.$resourcesUrl$ = new URL(options.resourcesUrl || './', win.document.baseURI).href;
	let hasSlotRelocation = false;
	lazyBundles.map((lazyBundle) => {
		lazyBundle[1].map((compactMeta) => {
			var _a2;
			const cmpMeta = {
				$flags$: compactMeta[0],
				$tagName$: compactMeta[1],
				$members$: compactMeta[2],
				$listeners$: compactMeta[3],
			};
			if (cmpMeta.$flags$ & 4 /* hasSlotRelocation */) {
				hasSlotRelocation = true;
			}
			{
				cmpMeta.$members$ = compactMeta[2];
			}
			{
				cmpMeta.$listeners$ = compactMeta[3];
			}
			{
				cmpMeta.$watchers$ = (_a2 = compactMeta[4]) != null ? _a2 : {};
			}
			const tagName = cmpMeta.$tagName$;
			const HostElement = class extends HTMLElement {
				// StencilLazyHost
				constructor(self) {
					super(self);
					this.hasRegisteredEventListeners = false;
					self = this;
					registerHost(self, cmpMeta);
					if (cmpMeta.$flags$ & 1 /* shadowDomEncapsulation */) {
						{
							if (!self.shadowRoot) {
								createShadowRoot.call(self, cmpMeta);
							} else {
								if (self.shadowRoot.mode !== 'open') {
									throw new Error(
										`Unable to re-use existing shadow root for ${cmpMeta.$tagName$}! Mode is set to ${self.shadowRoot.mode} but Stencil only supports open shadow roots.`,
									);
								}
							}
						}
					}
				}
				connectedCallback() {
					const hostRef = getHostRef(this);
					if (!this.hasRegisteredEventListeners) {
						this.hasRegisteredEventListeners = true;
						addHostEventListeners(this, hostRef, cmpMeta.$listeners$);
					}
					if (appLoadFallback) {
						clearTimeout(appLoadFallback);
						appLoadFallback = null;
					}
					if (isBootstrapping) {
						deferredConnectedCallbacks.push(this);
					} else {
						plt.jmp(() => connectedCallback(this));
					}
				}
				disconnectedCallback() {
					plt.jmp(() => disconnectedCallback(this));
					plt.raf(() => {
						var _a3;
						const hostRef = getHostRef(this);
						const i2 = deferredConnectedCallbacks.findIndex((host) => host === this);
						if (i2 > -1) {
							deferredConnectedCallbacks.splice(i2, 1);
						}
						if (
							((_a3 = hostRef == null ? void 0 : hostRef.$vnode$) == null ? void 0 : _a3.$elm$) instanceof Node &&
							!hostRef.$vnode$.$elm$.isConnected
						) {
							delete hostRef.$vnode$.$elm$;
						}
					});
				}
				componentOnReady() {
					return getHostRef(this).$onReadyPromise$;
				}
			};
			if (cmpMeta.$flags$ & 64 /* formAssociated */) {
				HostElement.formAssociated = true;
			}
			cmpMeta.$lazyBundleId$ = lazyBundle[0];
			if (!exclude.includes(tagName) && !customElements2.get(tagName)) {
				cmpTags.push(tagName);
				customElements2.define(tagName, proxyComponent(HostElement, cmpMeta, 1 /* isElementConstructor */));
			}
		});
	});
	if (cmpTags.length > 0) {
		if (hasSlotRelocation) {
			dataStyles.textContent += SLOT_FB_CSS;
		}
		{
			dataStyles.textContent += cmpTags.sort() + HYDRATED_CSS;
		}
		if (dataStyles.innerHTML.length) {
			dataStyles.setAttribute('data-styles', '');
			const nonce = (_a = plt.$nonce$) != null ? _a : queryNonceMetaTagContent(win.document);
			if (nonce != null) {
				dataStyles.setAttribute('nonce', nonce);
			}
			head.insertBefore(dataStyles, metaCharset ? metaCharset.nextSibling : head.firstChild);
		}
	}
	isBootstrapping = false;
	if (deferredConnectedCallbacks.length) {
		deferredConnectedCallbacks.map((host) => host.connectedCallback());
	} else {
		{
			plt.jmp(() => (appLoadFallback = setTimeout(appDidLoad, 30)));
		}
	}
	endBootstrap();
};

// src/runtime/fragment.ts
var Fragment = (_, children) => children;
var addHostEventListeners = (elm, hostRef, listeners, attachParentListeners) => {
	if (listeners && win.document) {
		listeners.map(([flags, name, method]) => {
			const target = getHostListenerTarget(win.document, elm, flags);
			const handler = hostListenerProxy(hostRef, method);
			const opts = hostListenerOpts(flags);
			plt.ael(target, name, handler, opts);
			(hostRef.$rmListeners$ = hostRef.$rmListeners$ || []).push(() => plt.rel(target, name, handler, opts));
		});
	}
};
var hostListenerProxy = (hostRef, methodName) => (ev) => {
	var _a;
	try {
		{
			if (hostRef.$flags$ & 256 /* isListenReady */) {
				(_a = hostRef.$lazyInstance$) == null ? void 0 : _a[methodName](ev);
			} else {
				(hostRef.$queuedListeners$ = hostRef.$queuedListeners$ || []).push([methodName, ev]);
			}
		}
	} catch (e) {
		consoleError(e, hostRef.$hostElement$);
	}
};
var getHostListenerTarget = (doc, elm, flags) => {
	if (flags & 8 /* TargetWindow */) {
		return win;
	}
	return elm;
};
var hostListenerOpts = (flags) =>
	supportsListenerOptions
		? {
				passive: (flags & 1) /* Passive */ !== 0,
				capture: (flags & 2) /* Capture */ !== 0,
			}
		: (flags & 2) /* Capture */ !== 0;

// src/runtime/nonce.ts
var setNonce = (nonce) => (plt.$nonce$ = nonce);

export {
	Fragment as F,
	getElement as a,
	bootstrapLazy as b,
	createEvent as c,
	getAssetPath as d,
	globalScripts as g,
	h,
	promiseResolve as p,
	registerInstance as r,
	setNonce as s,
};
//# sourceMappingURL=index-Cc98g_3o.js.map

//# sourceMappingURL=index-Cc98g_3o.js.map
